// ====== CASE ROULETTE JAVASCRIPT ======

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–∑–æ–≤ —Å —Ç–æ—á–Ω—ã–º–∏ —à–∞–Ω—Å–∞–º–∏
const PRIZES_CONFIG = [
  { 
    name: '–°–∫–∏–¥–∫–∞ 10% –Ω–∞ –ª—é–±—É—é –ø–æ–¥–ø–∏—Å–∫—É', 
    type: 'discount', 
    value: 10, 
    chance: 40, 
    icon: 'üíé', 
    action: 'use',
    description: '–ü–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 10% –Ω–∞ –ª—é–±—É—é –ø–æ–¥–ø–∏—Å–∫—É'
  },
  { 
    name: '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É 6 –º–µ—Å.', 
    type: 'discount', 
    value: 20, 
    chance: 25, 
    icon: 'üíé', 
    action: 'use',
    description: '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 6 –º–µ—Å—è—Ü–µ–≤'
  },
  { 
    name: '–°–∫–∏–¥–∫–∞ 50% –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É 12 –º–µ—Å.', 
    type: 'discount', 
    value: 50, 
    chance: 15, 
    icon: 'üíé', 
    action: 'use',
    description: '–°–∫–∏–¥–∫–∞ 50% –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 12 –º–µ—Å—è—Ü–µ–≤'
  },
  { 
    name: '–ü–æ–ª–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ 1 –º–µ—Å.', 
    type: 'subscription', 
    value: 1, 
    chance: 5, 
    icon: 'üé´', 
    action: 'activate',
    description: '–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 1 –º–µ—Å—è—Ü'
  },
  { 
    name: '50 MULACOIN', 
    type: 'mulacoin', 
    value: 50, 
    chance: 40, 
    icon: 'ü•á', 
    action: 'activate',
    description: '–ü–æ–ª—É—á–∏—Ç–µ 50 –∑–æ–ª–æ—Ç—ã—Ö –º–æ–Ω–µ—Ç'
  },
  { 
    name: '+1 SPIN', 
    type: 'spin', 
    value: 1, 
    chance: 80, 
    icon: 'üé∞', 
    action: 'activate',
    description: '–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–∏–Ω –≤ —Ä—É–ª–µ—Ç–∫–µ'
  },
  { 
    name: '10 MULACOIN', 
    type: 'mulacoin', 
    value: 10, 
    chance: 60, 
    icon: 'ü•á', 
    action: 'activate',
    description: '–ü–æ–ª—É—á–∏—Ç–µ 10 –∑–æ–ª–æ—Ç—ã—Ö –º–æ–Ω–µ—Ç'
  },
  { 
    name: '–õ–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è', 
    type: 'consultation', 
    value: 1, 
    chance: 3, 
    icon: 'üë®‚Äçüíº', 
    action: 'use',
    description: '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ—Ç —ç–∫—Å–ø–µ—Ä—Ç–∞'
  },
  { 
    name: '–ü–æ–ª–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –§–†–û–î–£', 
    type: 'education', 
    value: 1, 
    chance: 1, 
    icon: 'üìö', 
    action: 'use',
    description: '–ü–æ–ª–Ω—ã–π –∫—É—Ä—Å –æ–±—É—á–µ–Ω–∏—è –§–†–û–î–£'
  }
];

// –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
let gameState = {
  spinsLeft: 3,
  totalWins: 0,
  mulacoinBalance: 0,
  isSpinning: false,
  userPrizes: [],
  spinHistory: [],
  lastSpinTime: null
};

// –ê—É–¥–∏–æ —ç–ª–µ–º–µ–Ω—Ç—ã
let spinAudio = null;
let winAudio = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
  initializeGame();
  loadGameState();
  initializeRoulette();
  updateDisplay();
  loadUserPrizes();
  setupEventListeners();
  preloadAudio();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä—ã
function initializeGame() {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
  const savedData = localStorage.getItem('rouletteGameState');
  if (savedData) {
    try {
      const parsed = JSON.parse(savedData);
      gameState = { ...gameState, ...parsed };
    } catch (e) {
      console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', e);
    }
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—É–¥–∏–æ
  preloadAudio();
}

// –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ
function preloadAudio() {
  try {
    spinAudio = new Audio('./assets/photovideo/kazik.mp3');
    spinAudio.volume = 0.5;
    spinAudio.preload = 'auto';
  } catch (e) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ:', e);
  }
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function setupEventListeners() {
  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à–∏ Escape
  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape') {
      closeWinningModal();
    }
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –≤–Ω–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  const modal = document.getElementById('winningModal');
  if (modal) {
    modal.addEventListener('click', function(e) {
      if (e.target === this) {
        closeWinningModal();
      }
    });
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  document.addEventListener('visibilitychange', function() {
    if (document.hidden && gameState.isSpinning) {
      // –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–∫—Ä—ã—Ç–∞ –≤–æ –≤—Ä–µ–º—è –≤—Ä–∞—â–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
      stopRoulette();
    }
  });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
function loadGameState() {
  const saved = localStorage.getItem('rouletteGameState');
  if (saved) {
    try {
      const parsed = JSON.parse(saved);
      gameState = { ...gameState, ...parsed };
    } catch (e) {
      console.warn('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã:', e);
    }
  }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
function saveGameState() {
  try {
    localStorage.setItem('rouletteGameState', JSON.stringify(gameState));
  } catch (e) {
    console.warn('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã:', e);
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä—É–ª–µ—Ç–∫–∏
function initializeRoulette() {
  const track = document.getElementById('rouletteTrack');
  if (!track) return;

  // –°–æ–∑–¥–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –ª–µ–Ω—Ç—É –ø—Ä–∏–∑–æ–≤
  let html = '';
  const totalItems = 100; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏
  
  for (let i = 0; i < totalItems; i++) {
    const prize = PRIZES_CONFIG[Math.floor(Math.random() * PRIZES_CONFIG.length)];
    html += `<div class="roulette-item" data-prize="${prize.type}">${prize.icon} ${prize.name}</div>`;
  }
  
  track.innerHTML = html;
  
  // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏
  track.addEventListener('transitionend', function() {
    if (track.classList.contains('slowdown')) {
      // –ü–æ—Å–ª–µ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
      setTimeout(() => {
        track.style.transition = 'none';
        track.style.transform = 'translateX(0)';
        setTimeout(() => {
          track.style.transition = 'transform 15s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
        }, 10);
      }, 100);
    }
  });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function updateDisplay() {
  const spinsLeftEl = document.getElementById('spinsLeft');
  const totalWinsEl = document.getElementById('totalWins');
  const mulacoinBalanceEl = document.getElementById('mulacoinBalance');
  
  if (spinsLeftEl) spinsLeftEl.textContent = gameState.spinsLeft;
  if (totalWinsEl) totalWinsEl.textContent = gameState.totalWins;
  if (mulacoinBalanceEl) mulacoinBalanceEl.textContent = gameState.mulacoinBalance;
  
  const spinBtn = document.getElementById('spinBtn');
  const buySpinBtn = document.getElementById('buySpinBtn');
  
  if (spinBtn) {
    spinBtn.disabled = gameState.isSpinning || gameState.spinsLeft <= 0;
    spinBtn.textContent = gameState.isSpinning ? 'üé∞ –ö—Ä—É—Ç–∏—Ç—Å—è...' : 'üé∞ –ö—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É';
  }
  
  if (buySpinBtn) {
    buySpinBtn.disabled = gameState.mulacoinBalance < 50;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  animateStats();
}

// –ê–Ω–∏–º–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function animateStats() {
  const statValues = document.querySelectorAll('.stat-value');
  statValues.forEach(el => {
    el.style.animation = 'none';
    setTimeout(() => {
      el.style.animation = 'countUp 0.6s ease-out';
    }, 10);
  });
}

// –ö—Ä—É—á–µ–Ω–∏–µ —Ä—É–ª–µ—Ç–∫–∏
function spinRoulette() {
  if (gameState.isSpinning || gameState.spinsLeft <= 0) {
    showToast('–ù–µ–ª—å–∑—è –∫—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É —Å–µ–π—á–∞—Å!', 'error');
    return;
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–ø–∏–Ω–∞ (–∞–Ω—Ç–∏—Å–ø–∞–º)
  const now = Date.now();
  if (gameState.lastSpinTime && (now - gameState.lastSpinTime) < 1000) {
    showToast('–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Å–ø–∏–Ω–æ–º!', 'warning');
    return;
  }

  gameState.isSpinning = true;
  gameState.spinsLeft--;
  gameState.lastSpinTime = now;
  
  updateDisplay();

  const track = document.getElementById('rouletteTrack');
  const spinBtn = document.getElementById('spinBtn');
  
  if (!track || !spinBtn) return;
  
  // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
  spinBtn.disabled = true;
  spinBtn.textContent = 'üé∞ –ö—Ä—É—Ç–∏—Ç—Å—è...';

  // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
  track.classList.add('spinning');
  
  // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
  playSpinSound();

  // –ß–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –Ω–∞—á–∏–Ω–∞–µ–º –∑–∞–º–µ–¥–ª–µ–Ω–∏–µ
  setTimeout(() => {
    track.classList.remove('spinning');
    track.classList.add('slowdown');
    
    // –ü–ª–∞–≤–Ω–æ –∑–∞–º–µ–¥–ª—è–µ–º
    track.style.transition = 'transform 5s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
    
    // –í—ã—á–∏—Å–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
    const finalPosition = calculateFinalPosition();
    track.style.transform = `translateX(${finalPosition}px)`;
    
  }, 10000);

  // –ß–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
  setTimeout(() => {
    stopRoulette();
  }, 15000);
}

// –í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
function calculateFinalPosition() {
  // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
  const basePosition = -Math.random() * 1000 - 500;
  return basePosition;
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä—É–ª–µ—Ç–∫–∏
function stopRoulette() {
  const track = document.getElementById('rouletteTrack');
  if (!track) return;
  
  track.classList.remove('slowdown');
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à–Ω—ã–π –ø—Ä–∏–∑
  const winningPrize = determineWinningPrize();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  showWinningModal(winningPrize);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  gameState.totalWins++;
  gameState.userPrizes.push(winningPrize);
  gameState.spinHistory.push({
    prize: winningPrize,
    timestamp: Date.now()
  });
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
  saveGameState();
  updateDisplay();
  loadUserPrizes();
  
  // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É
  gameState.isSpinning = false;
  const spinBtn = document.getElementById('spinBtn');
  if (spinBtn) {
    spinBtn.disabled = false;
    spinBtn.textContent = 'üé∞ –ö—Ä—É—Ç–∏—Ç—å —Ä—É–ª–µ—Ç–∫—É';
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—ã–∏–≥—Ä—ã—à–µ
  showToast(`üéâ –í—ã–∏–≥—Ä—ã—à: ${winningPrize.name}!`, 'success');
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—ã–∏–≥—Ä—ã—à–Ω–æ–≥–æ –ø—Ä–∏–∑–∞
function determineWinningPrize() {
  const random = Math.random() * 100;
  let cumulativeChance = 0;
  
  for (const prize of PRIZES_CONFIG) {
    cumulativeChance += prize.chance;
    if (random <= cumulativeChance) {
      return { ...prize, id: Date.now() + Math.random() };
    }
  }
  
  // Fallback - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–µ—Ä–≤—ã–π –ø—Ä–∏–∑
  return { ...PRIZES_CONFIG[0], id: Date.now() + Math.random() };
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –≤—ã–∏–≥—Ä—ã—à–∞
function showWinningModal(prize) {
  const modal = document.getElementById('winningModal');
  const icon = document.getElementById('winningIcon');
  const title = document.getElementById('winningTitle');
  const description = document.getElementById('winningDescription');
  const actions = document.getElementById('winningActions');

  if (!modal || !icon || !title || !description || !actions) return;

  icon.textContent = prize.icon;
  title.textContent = 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!';
  description.textContent = `–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏: ${prize.name}`;

  let actionsHtml = '';
  if (prize.action === 'activate') {
    actionsHtml = `<button class="btn btn-primary btn-small" onclick="activatePrize('${prize.id}')">–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å</button>`;
  } else if (prize.action === 'use') {
    actionsHtml = `<button class="btn btn-secondary btn-small" onclick="usePrize('${prize.id}')">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å</button>`;
  }
  
  actionsHtml += `<button class="btn btn-secondary btn-small" onclick="closeWinningModal()">–ó–∞–∫—Ä—ã—Ç—å</button>`;
  actions.innerHTML = actionsHtml;

  modal.style.display = 'flex';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è
  modal.style.animation = 'fadeIn 0.3s ease';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeWinningModal() {
  const modal = document.getElementById('winningModal');
  if (modal) {
    modal.style.animation = 'fadeOut 0.3s ease';
    setTimeout(() => {
      modal.style.display = 'none';
    }, 300);
  }
}

// –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø—Ä–∏–∑–∞
function activatePrize(prizeId) {
  const prize = gameState.userPrizes.find(p => p.id == prizeId);
  if (!prize) return;

  let message = '';
  let success = false;

  switch (prize.type) {
    case 'mulacoin':
      gameState.mulacoinBalance += prize.value;
      message = `–ü–æ–ª—É—á–µ–Ω–æ ${prize.value} MULACOIN!`;
      success = true;
      break;
    case 'spin':
      gameState.spinsLeft += prize.value;
      message = `–ü–æ–ª—É—á–µ–Ω–æ ${prize.value} –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–∏–Ω!`;
      success = true;
      break;
    case 'subscription':
      // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–¥–∞—á–∏ –ø–æ–¥–ø–∏—Å–∫–∏
      if (window.Telegram && window.Telegram.WebApp) {
        try {
          window.Telegram.WebApp.sendData(JSON.stringify({
            command: '/galdin',
            duration: '1 –º–µ—Å—è—Ü',
            timestamp: Date.now()
          }));
          message = '–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!';
          success = true;
        } catch (e) {
          message = '–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏';
          success = false;
        }
      } else {
        message = '–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞!';
        success = true;
      }
      break;
  }

  if (success) {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–∑ –∏–∑ —Å–ø–∏—Å–∫–∞
    gameState.userPrizes = gameState.userPrizes.filter(p => p.id != prizeId);
    
    saveGameState();
    updateDisplay();
    loadUserPrizes();
    closeWinningModal();
    
    showToast(message, 'success');
  } else {
    showToast(message, 'error');
  }
}

// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–∑–∞
function usePrize(prizeId) {
  const prize = gameState.userPrizes.find(p => p.id == prizeId);
  if (!prize) return;

  let message = '';
  let originalPrice = '';
  let discountedPrice = '';

  switch (prize.type) {
    case 'discount':
      if (prize.value === 10) {
        originalPrice = '–õ—é–±–∞—è –ø–æ–¥–ø–∏—Å–∫–∞';
        discountedPrice = '–°–∫–∏–¥–∫–∞ 10%';
      } else if (prize.value === 20) {
        originalPrice = '–ü–æ–¥–ø–∏—Å–∫–∞ 6 –º–µ—Å.';
        discountedPrice = '–°–∫–∏–¥–∫–∞ 20%';
      } else if (prize.value === 50) {
        originalPrice = '–ü–æ–¥–ø–∏—Å–∫–∞ 12 –º–µ—Å.';
        discountedPrice = '–°–∫–∏–¥–∫–∞ 50%';
      }
      message = `–•–æ—á—É –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥: ${prize.name}\n\n${originalPrice}\n${discountedPrice}`;
      break;
    case 'consultation':
      message = '–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å –ª–∏—á–Ω—É—é –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É!';
      break;
    case 'education':
      message = '–•–æ—á—É –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ –Ω–∞ –ø–æ–ª–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –§–†–û–î–£!';
      break;
  }

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
  try {
    if (window.Telegram && window.Telegram.WebApp) {
      window.Telegram.WebApp.openTelegramLink(`https://t.me/acqu1red?text=${encodeURIComponent(message)}`);
    } else {
      // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
      window.open(`https://t.me/acqu1red?text=${encodeURIComponent(message)}`, '_blank');
    }
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–∏–∑ –∏–∑ —Å–ø–∏—Å–∫–∞
    gameState.userPrizes = gameState.userPrizes.filter(p => p.id != prizeId);
    
    saveGameState();
    updateDisplay();
    loadUserPrizes();
    closeWinningModal();
    
    showToast('–ü—Ä–æ–º–æ–∫–æ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω!', 'success');
  } catch (e) {
    showToast('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è', 'error');
  }
}

// –ü–æ–∫—É–ø–∫–∞ —Å–ø–∏–Ω–∞
function buySpin() {
  if (gameState.mulacoinBalance < 50) {
    showToast('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ MULACOIN!', 'error');
    return;
  }

  gameState.mulacoinBalance -= 50;
  gameState.spinsLeft += 1;
  
  saveGameState();
  updateDisplay();
  showToast('–°–ø–∏–Ω –∫—É–ø–ª–µ–Ω –∑–∞ 50 MULACOIN!', 'success');
}

// –ü–æ–∫–∞–∑ –ø—Ä–∏–∑–æ–≤
function showPrizes() {
  let prizesHtml = '<div style="text-align: center; padding: 20px;">';
  prizesHtml += '<h3 style="color: var(--text-primary); margin-bottom: 20px;">üèÜ –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–∏–∑—ã</h3>';
  
  PRIZES_CONFIG.forEach(prize => {
    prizesHtml += `
      <div style="background: var(--accent-gold); padding: 15px; margin: 10px 0; border-radius: 10px; border: 2px solid var(--bg-primary);">
        <div style="font-size: 24px; margin-bottom: 10px;">${prize.icon}</div>
        <div style="font-weight: 600; color: var(--text-primary); margin-bottom: 5px;">${prize.name}</div>
        <div style="font-size: 14px; color: var(--text-secondary); margin-bottom: 8px;">${prize.description}</div>
        <div style="font-size: 12px; color: var(--text-secondary);">–®–∞–Ω—Å: ${prize.chance}%</div>
      </div>
    `;
  });
  
  prizesHtml += '</div>';
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ
  showModal('–ü—Ä–∏–∑—ã', prizesHtml);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–∏–∑–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function loadUserPrizes() {
  const promoGrid = document.getElementById('promoGrid');
  if (!promoGrid) return;

  if (gameState.userPrizes.length === 0) {
    promoGrid.innerHTML = `
      <div style="text-align: center; color: var(--text-secondary); padding: 40px;">
        <div style="font-size: 48px; margin-bottom: 20px;">üé∞</div>
        <h3 style="margin-bottom: 15px;">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–∏–∑–æ–≤</h3>
        <p>–ö—Ä—É—Ç–∏—Ç–µ —Ä—É–ª–µ—Ç–∫—É, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–∏–∑—ã –∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã!</p>
      </div>
    `;
    return;
  }

  let html = '';
  gameState.userPrizes.forEach(prize => {
    html += `
      <div class="promo-card">
        <div class="promo-name">${prize.icon} ${prize.name}</div>
        <div class="promo-description">
          ${prize.type === 'discount' ? `–°–∫–∏–¥–∫–∞ ${prize.value}%` : 
            prize.type === 'mulacoin' ? `${prize.value} MULACOIN` :
            prize.type === 'spin' ? `+${prize.value} —Å–ø–∏–Ω` :
            prize.type === 'subscription' ? '–ü–æ–¥–ø–∏—Å–∫–∞ 1 –º–µ—Å—è—Ü' :
            prize.type === 'consultation' ? '–õ–∏—á–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è' :
            '–ü–æ–ª–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ –§–†–û–î–£'}
        </div>
        <div class="promo-actions">
          ${prize.action === 'activate' ? 
            `<button class="btn btn-small btn-activate" onclick="activatePrize('${prize.id}')">–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å</button>` :
            `<button class="btn btn-small btn-use" onclick="usePrize('${prize.id}')">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å</button>`
          }
        </div>
      </div>
    `;
  });

  promoGrid.innerHTML = html;
}

// –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–≤—É–∫–∞
function playSpinSound() {
  if (spinAudio) {
    try {
      spinAudio.currentTime = 0;
      spinAudio.play().catch(e => console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–≤—É–∫:', e));
    } catch (e) {
      console.log('–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞:', e);
    }
  }
}

// –ü–æ–∫–∞–∑ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function showModal(title, content) {
  const modal = document.getElementById('winningModal');
  const icon = document.getElementById('winningIcon');
  const titleEl = document.getElementById('winningTitle');
  const description = document.getElementById('winningDescription');
  const actions = document.getElementById('winningActions');

  if (!modal || !icon || !titleEl || !description || !actions) return;

  icon.textContent = 'üèÜ';
  titleEl.textContent = title;
  description.innerHTML = content;
  actions.innerHTML = '<button class="btn btn-primary btn-small" onclick="closeWinningModal()">–ó–∞–∫—Ä—ã—Ç—å</button>';

  modal.style.display = 'flex';
}

// –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showToast(message, type = 'info') {
  // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const existingToasts = document.querySelectorAll('.toast-notification');
  existingToasts.forEach(toast => document.body.removeChild(toast));

  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  const toast = document.createElement('div');
  toast.className = 'toast-notification';
  toast.style.cssText = `
    position: fixed;
    top: 20px;
    right: 20px;
    background: ${type === 'success' ? '#4CAF50' : type === 'error' ? '#f44336' : type === 'warning' ? '#ff9800' : '#2196F3'};
    color: white;
    padding: 15px 20px;
    border-radius: 10px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
    z-index: 10000;
    font-weight: 600;
    max-width: 300px;
    word-wrap: break-word;
    transform: translateX(100%);
    transition: transform 0.3s ease;
  `;
  toast.textContent = message;
  
  document.body.appendChild(toast);
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    toast.style.transform = 'translateX(0)';
  }, 100);
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
  setTimeout(() => {
    toast.style.transform = 'translateX(100%)';
    setTimeout(() => {
      if (document.body.contains(toast)) {
        document.body.removeChild(toast);
      }
    }, 300);
  }, 3000);
}

// –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥
function goBack() {
  if (window.history.length > 1) {
    window.history.back();
  } else {
    window.location.href = 'quests.html';
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
window.spinRoulette = spinRoulette;
window.buySpin = buySpin;
window.showPrizes = showPrizes;
window.activatePrize = activatePrize;
window.usePrize = usePrize;
window.closeWinningModal = closeWinningModal;
window.goBack = goBack;

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
window.gameState = gameState;
window.resetGame = function() {
  if (confirm('–°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã?')) {
    localStorage.removeItem('rouletteGameState');
    location.reload();
  }
};
