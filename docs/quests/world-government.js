// –ú–∏—Ä–æ–≤–æ–µ —Ç–∞–π–Ω–æ–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ - –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
class WorldGovernmentQuest {
  constructor() {
    this.stories = new WorldGovernmentStories();
    this.currentStory = null;
    this.storyIndex = 0;
    this.isAudioEnabled = true;
    this.currentVideo = null;
    this.storyQueue = [];
    this.assignments = {};
    
    this.initializeEventListeners();
    this.loadCharacters();
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
  initializeEventListeners() {
    // –ö–Ω–æ–ø–∫–∞ –Ω–∞—á–∞–ª–∞ –∫–≤–µ—Å—Ç–∞
    document.getElementById('start-quest').addEventListener('click', () => {
      this.startQuest();
    });

    // –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
    document.getElementById('back-to-main').addEventListener('click', () => {
      this.returnToMain();
    });

    // –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è
    document.getElementById('finish-creation').addEventListener('click', () => {
      this.showFinishModal();
    });

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    document.getElementById('confirm-finish').addEventListener('click', () => {
      this.finishCreation();
    });

    // –û—Ç–º–µ–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    document.getElementById('cancel-finish').addEventListener('click', () => {
      this.hideFinishModal();
    });

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞
    document.getElementById('toggle-sound').addEventListener('click', () => {
      this.toggleAudio();
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–µ–∫—Ç–æ—Ä–æ–≤
    this.initializeSectorEventListeners();
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å—é–∂–µ—Ç–æ–≤
    document.getElementById('continue-story').addEventListener('click', () => {
      this.hideStory();
      this.showNextStory();
    });
    
    document.getElementById('skip-story').addEventListener('click', () => {
      this.hideStory();
      this.showNextStory();
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    document.getElementById('close-members').addEventListener('click', () => {
      document.getElementById('members-modal').classList.remove('active');
    });

    document.getElementById('close-character-details').addEventListener('click', () => {
      document.getElementById('character-details-modal').classList.remove('active');
    });
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è —Å–µ–∫—Ç–æ—Ä–æ–≤
  initializeSectorEventListeners() {
    const sectors = document.querySelectorAll('.sector');
    sectors.forEach(sector => {
      sector.addEventListener('click', () => {
        this.showSectorMembers(sector.dataset.sector);
      });
    });
  }

  // –ù–∞—á–∞–ª–æ –∫–≤–µ—Å—Ç–∞
  startQuest() {
    document.getElementById('warning-modal').classList.remove('active');
    document.getElementById('main-interface').classList.remove('hidden');
    
    // –í–∫–ª—é—á–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É
    this.startBackgroundAudio();
  }

  // –í–∫–ª—é—á–µ–Ω–∏–µ —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–∏
  startBackgroundAudio() {
    const audio = document.getElementById('horror-audio');
    if (audio && this.isAudioEnabled) {
      audio.volume = 0.3;
      audio.play().catch(e => console.log('–ê—É–¥–∏–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ:', e));
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–∏ –æ–∫–æ–Ω—á–∞–Ω–∏–∏
      audio.addEventListener('ended', () => {
        if (this.isAudioEnabled) {
          audio.currentTime = 0;
          audio.play().catch(e => console.log('–ê—É–¥–∏–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ:', e));
        }
      });
    }
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–∞
  toggleAudio() {
    this.isAudioEnabled = !this.isAudioEnabled;
    const audio = document.getElementById('horror-audio');
    const soundBtn = document.getElementById('toggle-sound');
    const soundIcon = soundBtn.querySelector('.sound-icon');
    const soundText = soundBtn.querySelector('.sound-text');
    
    if (this.isAudioEnabled) {
      soundIcon.textContent = 'üîä';
      soundText.textContent = '–ó–≤—É–∫ –í–ö–õ';
      if (audio) {
        audio.volume = 0.3;
        audio.play().catch(e => console.log('–ê—É–¥–∏–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ:', e));
      }
    } else {
      soundIcon.textContent = 'üîá';
      soundText.textContent = '–ó–≤—É–∫ –í–´–ö–õ';
      if (audio) {
        audio.pause();
      }
    }
  }

  // –ü–æ–∫–∞–∑ —Å—é–∂–µ—Ç–∞ —Å –≤–∏–¥–µ–æ —Ñ–æ–Ω–æ–º
  showStoryWithVideo(story) {
    const storyModal = document.getElementById('story-modal');
    const storyTitle = document.getElementById('story-title');
    const storyText = document.getElementById('story-text');
    const videoBackground = document.getElementById('story-video-background');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ç–µ–∫—Å—Ç
    storyTitle.textContent = story.title;
    storyText.textContent = story.content;
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≤–∏–¥–µ–æ —Ñ–æ–Ω
    if (story.video && this.stories.getVideoBackground(story)) {
      const video = document.createElement('video');
      video.src = this.stories.getVideoBackground(story);
      video.autoplay = true;
      video.muted = true;
      video.loop = true;
      video.style.width = '100%';
      video.style.height = '100%';
      video.style.objectFit = 'cover';
      
      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –≤–∏–¥–µ–æ
      videoBackground.innerHTML = '';
      videoBackground.appendChild(video);
      videoBackground.style.display = 'block';
    } else {
      videoBackground.style.display = 'none';
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    storyModal.classList.add('show');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É –Ω–∞ –≤—Ä–µ–º—è –ø–æ–∫–∞–∑–∞ —Å—é–∂–µ—Ç–∞
    if (this.isAudioEnabled) {
      const audio = document.getElementById('horror-audio');
      if (audio) {
        audio.pause();
      }
    }
  }

  // –°–∫—Ä—ã—Ç–∏–µ —Å—é–∂–µ—Ç–∞
  hideStory() {
    const storyModal = document.getElementById('story-modal');
    storyModal.classList.remove('show');
    
    // –í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É
    if (this.isAudioEnabled) {
      const audio = document.getElementById('horror-audio');
      if (audio) {
        audio.play().catch(e => console.log('–ê—É–¥–∏–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ:', e));
      }
    }
  }

  // –ü–æ–∫–∞–∑ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å—é–∂–µ—Ç–∞
  showNextStory() {
    if (this.storyQueue.length > 0) {
      const nextStory = this.storyQueue.shift();
      this.showStoryWithVideo(nextStory);
    } else {
      // –í—Å–µ —Å—é–∂–µ—Ç—ã –ø–æ–∫–∞–∑–∞–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      this.showFinalResults();
    }
  }

  // –ü–æ–∫–∞–∑ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  showFinalResults() {
    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ñ–∏–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    console.log('–í—Å–µ —Å—é–∂–µ—Ç—ã –ø–æ–∫–∞–∑–∞–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã');
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å–µ–∫—Ç–æ—Ä–æ–≤
  getSectorsData() {
    const sectors = {};
    const sectorElements = document.querySelectorAll('.sector');
    
    sectorElements.forEach(sector => {
      const sectorType = sector.dataset.sector;
      const members = Array.from(sector.querySelectorAll('.sector-member')).map(member => {
        return {
          name: member.dataset.name,
          isCorrect: member.dataset.isCorrect === 'true'
        };
      });
      
      sectors[sectorType] = { members };
    });
    
    return sectors;
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
  loadCharacters() {
    this.characters = this.getDefaultCharacters();
    this.currentCharacterIndex = 0;
    this.showCurrentCharacter();
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  getDefaultCharacters() {
    return [
      {
        name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ü–µ—Ç—Ä–æ–≤",
        traits: ["–õ–∏–¥–µ—Ä—Å—Ç–≤–æ", "–•–∞—Ä–∏–∑–º–∞", "–°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ"],
        description: "–û–ø—ã—Ç–Ω—ã–π –ø–æ–ª–∏—Ç–∏–∫ —Å —Ö–∞—Ä–∏–∑–º–æ–π –ª–∏–¥–µ—Ä–∞. –ò–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "political"
      },
      {
        name: "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞",
        traits: ["–ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "–õ–æ–≥–∏–∫–∞", "–í–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º"],
        description: "–ë–ª–µ—Å—Ç—è—â–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ —Å–ø–µ—Ü—Å–ª—É–∂–±–∞—Ö. –û—Ç–ª–∏—á–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "research"
      },
      {
        name: "–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤",
        traits: ["–§–∏–Ω–∞–Ω—Å—ã", "–≠–∫–æ–Ω–æ–º–∏–∫–∞", "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã"],
        description: "–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º —Ñ–∏–Ω–∞–Ω—Å–∞–º. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "economic"
      },
      {
        name: "–ï–ª–µ–Ω–∞ –í–æ—Ä–æ–±—å–µ–≤–∞",
        traits: ["–ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∞", "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è", "–ú–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏"],
        description: "–ú–∞—Å—Ç–µ—Ä –ø—Ä–æ–ø–∞–≥–∞–Ω–¥—ã –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "propaganda"
      },
      {
        name: "–°–µ—Ä–≥–µ–π –ú–æ—Ä–æ–∑–æ–≤",
        traits: ["–í–æ–µ–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è", "–¢–∞–∫—Ç–∏–∫–∞", "–ö–æ–º–∞–Ω–¥–æ–≤–∞–Ω–∏–µ"],
        description: "–û–ø—ã—Ç–Ω—ã–π –≤–æ–µ–Ω–Ω—ã–π —Å—Ç—Ä–∞—Ç–µ–≥ —Å –æ–ø—ã—Ç–æ–º —Å–ø–µ—Ü–æ–ø–µ—Ä–∞—Ü–∏–π. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è –≤–æ–µ–Ω–Ω–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "military"
      },
      {
        name: "–ê–Ω–Ω–∞ –ö–æ–≤–∞–ª–µ–≤–∞",
        traits: ["–î–∏–ø–ª–æ–º–∞—Ç–∏—è", "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è", "–Ø–∑—ã–∫–∏"],
        description: "–î–∏–ø–ª–æ–º–∞—Ç –≤—ã—Å–æ–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è —Å –æ–±—à–∏—Ä–Ω—ã–º–∏ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º–∏ —Å–≤—è–∑—è–º–∏. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø–æ–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "political"
      },
      {
        name: "–í–∏–∫—Ç–æ—Ä –°–æ–∫–æ–ª–æ–≤",
        traits: ["–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö"],
        description: "–≠–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–º —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "research"
      },
      {
        name: "–ò—Ä–∏–Ω–∞ –ú–µ–¥–≤–µ–¥–µ–≤–∞",
        traits: ["–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–ë—Ä–µ–Ω–¥–∏–Ω–≥", "–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏"],
        description: "–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥—É –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –º–Ω–µ–Ω–∏–µ–º. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—Å—Ç—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "propaganda"
      },
      {
        name: "–ü–∞–≤–µ–ª –í–æ–ª–∫–æ–≤",
        traits: ["–õ–æ–≥–∏—Å—Ç–∏–∫–∞", "–°–Ω–∞–±–∂–µ–Ω–∏–µ", "–û–ø–µ—Ä–∞—Ü–∏–∏"],
        description: "–û–ø—ã—Ç–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ª–æ–≥–∏—Å—Ç–∏–∫–µ –∏ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é. –ò–¥–µ–∞–ª–µ–Ω –¥–ª—è –≤–æ–µ–Ω–Ω–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "military"
      },
      {
        name: "–û–ª—å–≥–∞ –ù–æ–≤–∏–∫–æ–≤–∞",
        traits: ["–ë–∞–Ω–∫–æ–≤—Å–∫–æ–µ –¥–µ–ª–æ", "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–†–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç"],
        description: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —ç–∫—Å–ø–µ—Ä—Ç —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã –≤ –∫—Ä—É–ø–Ω–µ–π—à–∏—Ö –±–∞–Ω–∫–∞—Ö –º–∏—Ä–∞. –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞.",
        correctSector: "economic"
      }
    ];
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
  showCurrentCharacter() {
    if (this.currentCharacterIndex < this.characters.length) {
      const character = this.characters[this.currentCharacterIndex];
      const characterCard = document.getElementById('current-character');
      
      characterCard.innerHTML = `
        <div class="character-name">${character.name}</div>
        <div class="character-traits">
          ${character.traits.map(trait => `<span class="trait">${trait}</span>`).join('')}
        </div>
        <div class="character-description">${character.description}</div>
        <div class="character-actions">
          <button class="btn btn-secondary" onclick="quest.assignToSector('${character.correctSector}')">
            –ù–∞–∑–Ω–∞—á–∏—Ç—å –≤ ${this.getSectorName(character.correctSector)}
          </button>
        </div>
      `;
    } else {
      // –í—Å–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω—ã
      document.getElementById('finish-creation').disabled = false;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å–µ–∫—Ç–æ—Ä–∞
  getSectorName(sector) {
    const names = {
      political: "–ü–æ–ª–∏—Ç–∏—á–µ—Å–∫–∏–π —à—Ç–∞–±",
      military: "–í–æ–µ–Ω–Ω—ã–π —à—Ç–∞–±",
      economic: "–≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —à—Ç–∞–±",
      research: "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —à—Ç–∞–±",
      propaganda: "–ü—Ä–æ–ø–∞–≥–∞–Ω–¥–∏—á–µ—Å–∫–∏–π —à—Ç–∞–±"
    };
    return names[sector] || sector;
  }

  // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ —Å–µ–∫—Ç–æ—Ä
  assignToSector(sector) {
    if (this.currentCharacterIndex < this.characters.length) {
      const character = this.characters[this.currentCharacterIndex];
      
      // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ —Å–µ–∫—Ç–æ—Ä
      if (!this.assignments[sector]) this.assignments[sector] = [];
      
      this.assignments[sector].push(character);
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–µ–∫—Ç–æ—Ä–∞
      this.updateSectorDisplay(sector);
      
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –ø–µ—Ä—Å–æ–Ω–∞–∂—É
      this.currentCharacterIndex++;
      this.showCurrentCharacter();
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–µ–∫—Ç–æ—Ä–∞
  updateSectorDisplay(sector) {
    const sectorElement = document.querySelector(`[data-sector="${sector}"]`);
    const countElement = sectorElement.querySelector('.sector-count');
    const membersElement = sectorElement.querySelector('.sector-members');
    
    const count = this.assignments[sector].length;
    const maxCount = this.getMaxSectorCount(sector);
    
    countElement.textContent = `${count}/${maxCount}`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º–µ–Ω–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
    membersElement.innerHTML = this.assignments[sector]
      .map(char => `<div class="sector-member" data-name="${char.name}" data-is-correct="true">${char.name}</div>`)
      .join('');
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –¥–ª—è —Å–µ–∫—Ç–æ—Ä–∞
  getMaxSectorCount(sector) {
    const maxCounts = {
      political: 4,
      military: 3,
      economic: 2,
      research: 2,
      propaganda: 3
    };
    return maxCounts[sector] || 0;
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  showFinishModal() {
    document.getElementById('finish-modal').classList.add('active');
  }

  // –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
  hideFinishModal() {
    document.getElementById('finish-modal').classList.remove('active');
  }

  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è
  finishCreation() {
    this.hideFinishModal();
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å—é–∂–µ—Ç–æ–≤
    const sectors = this.getSectorsData();
    this.storyQueue = this.stories.generateFullStorySequence(sectors, this.assignments);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Å—é–∂–µ—Ç
    if (this.storyQueue.length > 0) {
      const firstStory = this.storyQueue.shift();
      this.showStoryWithVideo(firstStory);
    }
  }

  // –ù–∞—á–∞–ª–æ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å—é–∂–µ—Ç–æ–≤
  startStorySequence() {
    this.storyIndex = 0;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Å—é–∂–µ—Ç
    this.showNextStory();
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Å—é–∂–µ—Ç
  showNextStory() {
    if (this.storyIndex < this.storyQueue.length) {
      const story = this.storyQueue[this.storyIndex];
      this.currentStory = story;
      this.showStoryModal(story);
    } else {
      // –í—Å–µ —Å—é–∂–µ—Ç—ã –ø–æ–∫–∞–∑–∞–Ω—ã, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
      this.showFinalResults();
    }
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å—é–∂–µ—Ç–∞
  showStoryModal(story) {
    const storyModal = document.getElementById('story-modal');
    const storyTitle = document.getElementById('story-title');
    const storyText = document.getElementById('story-text');
    
    storyTitle.textContent = story.title;
    storyText.innerHTML = story.content;
    
    // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –≤–∏–¥–µ–æ-—Ñ–æ–Ω –µ—Å–ª–∏ –µ—Å—Ç—å
    if (story.video) {
      this.playVideoBackground(story.video);
      storyModal.classList.add('with-video');
    } else {
      this.stopVideoBackground();
      storyModal.classList.remove('with-video');
    }
    
    storyModal.classList.add('active');
  }

  // –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ-—Ñ–æ–Ω–∞
  playVideoBackground(videoPath) {
    const videoBackground = document.getElementById('video-background');
    const video = document.getElementById('background-video');
    
    video.src = videoPath;
    video.play().catch(e => console.log('–í–∏–¥–µ–æ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ'));
    
    videoBackground.classList.remove('hidden');
    videoBackground.classList.add('active');
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–∏–¥–µ–æ-—Ñ–æ–Ω–∞
  stopVideoBackground() {
    const videoBackground = document.getElementById('video-background');
    const video = document.getElementById('background-video');
    
    video.pause();
    videoBackground.classList.add('hidden');
    videoBackground.classList.remove('active');
  }

  // –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å—é–∂–µ—Ç
  continueStory() {
    const storyModal = document.getElementById('story-modal');
    storyModal.classList.remove('active');
    
    // –ï—Å–ª–∏ —Å—é–∂–µ—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ–π—Å—Ç–≤–∏—è
    if (this.currentStory.requiresAction) {
      this.showActionModal(this.currentStory);
    } else {
      // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å—é–∂–µ—Ç—É
      this.storyIndex++;
      this.showNextStory();
    }
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ–π—Å—Ç–≤–∏—è
  showActionModal(story) {
    const actionModal = document.getElementById('action-modal');
    const actionTitle = document.getElementById('action-title');
    const actionText = document.getElementById('action-text');
    const actionOptions = document.getElementById('action-options');
    
    actionTitle.textContent = story.actionTitle || '–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏–µ';
    actionText.innerHTML = story.actionText || story.content;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏–π
    if (story.actionOptions) {
      actionOptions.innerHTML = story.actionOptions.map(option => `
        <div class="action-option">
          <input type="radio" name="action" value="${option.value}" id="option-${option.value}">
          <label for="option-${option.value}">${option.label}</label>
        </div>
      `).join('');
    } else {
      actionOptions.innerHTML = `
        <div class="action-option">
          <input type="radio" name="action" value="confirm" id="option-confirm" checked>
          <label for="option-confirm">–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å</label>
        </div>
      `;
    }
    
    actionModal.classList.add('active');
  }

  // –°–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ–π—Å—Ç–≤–∏—è
  hideActionModal() {
    document.getElementById('action-modal').classList.remove('active');
  }

  // –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ
  confirmAction() {
    const selectedAction = document.querySelector('input[name="action"]:checked');
    
    if (selectedAction) {
      const actionValue = selectedAction.value;
      this.processAction(actionValue);
    }
    
    this.hideActionModal();
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
  processAction(actionValue) {
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è
    const result = this.generateActionResult(actionValue);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    this.showActionResult(result);
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—è
  generateActionResult(actionValue) {
    const story = this.currentStory;
    
    if (actionValue === 'eliminate' && story.canEliminate) {
      return {
        title: '–ü—Ä–µ–¥–∞—Ç–µ–ª—å —É—Å—Ç—Ä–∞–Ω–µ–Ω',
        content: '–í–∞—à–∏ –∞–≥–µ–Ω—Ç—ã —É—Å–ø–µ—à–Ω–æ —É—Å—Ç—Ä–∞–Ω–∏–ª–∏ —É–≥—Ä–æ–∑—É. –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —Å–ø–∞—Å–µ–Ω–∞ –æ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ä–∞—Å–∫–æ–ª–∞.',
        type: 'success'
      };
    } else if (actionValue === 'negotiate') {
      return {
        title: '–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –ø—Ä–æ–≤–µ–¥–µ–Ω—ã',
        content: '–í–∞–º —É–¥–∞–ª–æ—Å—å –¥–æ–≥–æ–≤–æ—Ä–∏—Ç—å—Å—è —Å –æ–ø–ø–æ–∑–∏—Ü–∏–µ–π. –ö—Ä–∏–∑–∏—Å —Ä–∞–∑—Ä–µ—à–µ–Ω –º–∏—Ä–Ω—ã–º –ø—É—Ç–µ–º.',
        type: 'success'
      };
    } else {
      return {
        title: '–î–µ–π—Å—Ç–≤–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ',
        content: '–í–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –±—É–¥—É—Ç –≤–∏–¥–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.',
        type: 'neutral'
      };
    }
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è
  showActionResult(result) {
    const resultModal = document.getElementById('result-modal');
    const resultTitle = document.getElementById('result-title');
    const resultText = document.getElementById('result-text');
    
    resultTitle.textContent = result.title;
    resultText.innerHTML = result.content;
    
    resultModal.classList.add('active');
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–π—Å—Ç–≤–∏—è
  showNextResultAction() {
    const resultModal = document.getElementById('result-modal');
    resultModal.classList.remove('active');
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Å—é–∂–µ—Ç—É
    this.storyIndex++;
    this.showNextStory();
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  showFinalResults() {
    const finalModal = document.getElementById('final-results-modal');
    const finalSummary = document.getElementById('final-summary');
    const finalStats = document.getElementById('final-stats');
    const finalRewards = document.getElementById('final-rewards');
    
    // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const totalPersonnel = Object.values(this.assignments).reduce((sum, arr) => sum + (arr?.length || 0), 0);
    const hasCrises = this.storyQueue.some(story => story.type === "error");
    
    let resultType, resultText, rewards;
    
    if (totalPersonnel >= 12 && !hasCrises) {
      resultType = "–¢—Ä–∏—É–º—Ñ";
      resultText = "–í–∞—à–µ —Ç–∞–π–Ω–æ–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ –¥–æ—Å—Ç–∏–≥–ª–æ –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ —É—Å–ø–µ—Ö–∞!";
      rewards = "–û–ø—ã—Ç: +1000, MULACOIN: +500";
    } else if (totalPersonnel >= 8 && !hasCrises) {
      resultType = "–£—Å–ø–µ—Ö";
      resultText = "–í–∞—à–µ —Ç–∞–π–Ω–æ–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ!";
      rewards = "–û–ø—ã—Ç: +500, MULACOIN: +250";
    } else if (totalPersonnel >= 5) {
      resultType = "–ß–∞—Å—Ç–∏—á–Ω—ã–π —É—Å–ø–µ—Ö";
      resultText = "–í–∞—à–µ —Ç–∞–π–Ω–æ–µ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ —Å–æ–∑–¥–∞–Ω–æ, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.";
      rewards = "–û–ø—ã—Ç: +200, MULACOIN: +100";
    } else {
      resultType = "–ü—Ä–æ–≤–∞–ª";
      resultText = "–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–π–Ω–æ–≥–æ –ø—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–æ—Å—å.";
      rewards = "–û–ø—ã—Ç: +50, MULACOIN: +25";
    }
    
    finalSummary.innerHTML = `
      <h3>${resultType}</h3>
      <p>${resultText}</p>
    `;
    
    finalStats.innerHTML = `
      <div class="stat">
        <span class="stat-label">–í—Å–µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∞:</span>
        <span class="stat-value">${totalPersonnel}</span>
      </div>
      <div class="stat">
        <span class="stat-label">–ö—Ä–∏–∑–∏—Å—ã:</span>
        <span class="stat-value">${hasCrises ? '–î–∞' : '–ù–µ—Ç'}</span>
      </div>
    `;
    
    finalRewards.innerHTML = `
      <h4>–ù–∞–≥—Ä–∞–¥—ã:</h4>
      <p>${rewards}</p>
    `;
    
    finalModal.classList.add('active');
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —á–ª–µ–Ω–æ–≤ —Å–µ–∫—Ç–æ—Ä–∞
  showSectorMembers(sector) {
    const membersModal = document.getElementById('members-modal');
    const membersTitle = document.getElementById('members-title');
    const membersList = document.getElementById('members-list');
    
    membersTitle.textContent = `–ü–µ—Ä—Å–æ–Ω–∞–∂–∏ –≤ ${this.getSectorName(sector)}`;
    
    if (this.assignments && this.assignments[sector]) {
      membersList.innerHTML = this.assignments[sector]
        .map(char => `
          <div class="member-item">
            <div class="member-name">${char.name}</div>
            <div class="member-traits">
              ${char.traits.map(trait => `<span class="trait">${trait}</span>`).join('')}
            </div>
          </div>
        `)
        .join('');
    } else {
      membersList.innerHTML = '<p>–í —ç—Ç–æ–º —Å–µ–∫—Ç–æ—Ä–µ –ø–æ–∫–∞ –Ω–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π</p>';
    }
    
    membersModal.classList.add('active');
  }

  // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é
  returnToMain() {
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞—É–¥–∏–æ
    const audio = document.getElementById('horror-audio');
    if (audio) audio.pause();
    
    window.location.href = '../quests.html';
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–≤–µ—Å—Ç–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
let quest;
document.addEventListener('DOMContentLoaded', () => {
  quest = new WorldGovernmentQuest();
});

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ HTML
function assignToSector(sector) {
  if (quest) {
    quest.assignToSector(sector);
  }
}

function showSectorMembers(sector) {
  if (quest) {
    quest.showSectorMembers(sector);
  }
}
