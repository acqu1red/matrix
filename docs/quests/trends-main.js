/* ===== TRENDS QUEST MAIN ===== */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let questEngine = null;
let questUI = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–≤–µ—Å—Ç–∞ "–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤"...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –¥–≤–∏–∂–∫–∞ –∏ UI
    questEngine = new TrendsQuestEngine();
    questUI = new TrendsQuestUI(questEngine);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    questEngine.initialize();
    questUI.initialize();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    questUI.startPeriodicUpdates();
    
    console.log('‚úÖ –ö–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–≤–µ—Å—Ç–∞:', error);
    showErrorMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–≤–µ—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(event) {
  console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
  
  if (questUI) {
    questUI.showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.', 'error');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
window.addEventListener('unhandledrejection', function(event) {
  console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Ä–æ–º–∏—Å:', event.reason);
  
  if (questUI) {
    questUI.showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.', 'error');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', function(event) {
  if (questEngine && questEngine.getGameState().isRunning) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
    questEngine.saveProgress();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ
    event.preventDefault();
    event.returnValue = '–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç –ø–æ—Ç–µ—Ä—è–Ω. –í—ã —É–≤–µ—Ä–µ–Ω—ã?';
    return event.returnValue;
  }
});

// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function showErrorMessage(message) {
  const errorDiv = document.createElement('div');
  errorDiv.style.cssText = `
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(255, 68, 68, 0.9);
    color: white;
    padding: 20px;
    border-radius: 12px;
    font-size: 16px;
    font-weight: 600;
    z-index: 10000;
    max-width: 400px;
    text-align: center;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  `;
  
  errorDiv.innerHTML = `
    <div style="margin-bottom: 16px;">‚ö†Ô∏è –û—à–∏–±–∫–∞</div>
    <div style="margin-bottom: 20px; font-weight: 400;">${message}</div>
    <button onclick="location.reload()" style="
      background: white;
      color: #ff4444;
      border: none;
      padding: 8px 16px;
      border-radius: 6px;
      font-weight: 600;
      cursor: pointer;
    ">–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</button>
  `;
  
  document.body.appendChild(errorDiv);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∫–≤–µ—Å—Ç–æ–≤
function getQuestProgress() {
  if (!questEngine) return null;
  
  const gameState = questEngine.getGameState();
  
  return {
    isCompleted: !gameState.isRunning && gameState.currentStage > QUEST_CONFIG.stages,
    progress: Math.round((gameState.currentStage - 1) / QUEST_CONFIG.stages * 100),
    score: gameState.score,
    accuracy: gameState.accuracy,
    timeSpent: gameState.startTime ? Date.now() - gameState.startTime : 0
  };
}

function getQuestRewards() {
  if (!questEngine) return null;
  
  const gameState = questEngine.getGameState();
  
  if (gameState.isRunning || gameState.currentStage <= QUEST_CONFIG.stages) {
    return null; // –ö–≤–µ—Å—Ç –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω
  }
  
  const finalScore = questEngine.calculateFinalScore();
  return questEngine.calculateRewards(finalScore);
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    questEngine,
    questUI,
    getQuestProgress,
    getQuestRewards
  };
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (—Ç–æ–ª—å–∫–æ –≤ dev —Ä–µ–∂–∏–º–µ)
if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
  window.debugQuest = {
    engine: () => questEngine,
    ui: () => questUI,
    completeQuest: () => {
      if (questEngine) {
        questEngine.gameState.currentStage = QUEST_CONFIG.stages + 1;
        questUI.completeQuest();
      }
    },
    addScore: (points) => {
      if (questEngine) {
        questEngine.gameState.score += points;
        questUI.updateStatusPanel();
      }
    },
    setAccuracy: (percent) => {
      if (questEngine) {
        questEngine.gameState.accuracy = Math.max(0, Math.min(100, percent));
        questUI.updateStatusPanel();
      }
    },
    logEvent: (type, message) => {
      if (questEngine) {
        questEngine.logEvent(type, message);
        questUI.updateEventLog();
      }
    }
  };
  
  console.log('üîß Debug —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ window.debugQuest');
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (–∑–∞–≥–ª—É—à–∫–∏ –¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
function trackQuestStart() {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
  console.log('üìä –ö–≤–µ—Å—Ç –Ω–∞—á–∞—Ç');
}

function trackQuestComplete(results) {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  console.log('üìä –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω:', results);
}

function trackAnswerGiven(questionId, answer, correct) {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  console.log('üìä –û—Ç–≤–µ—Ç –¥–∞–Ω:', { questionId, answer, correct });
}

// –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π (–∑–∞–≥–ª—É—à–∫–∞)
function checkAchievements(gameState) {
  const achievements = [];
  
  if (gameState.accuracy >= 90) {
    achievements.push({
      id: 'perfect-analyst',
      name: '–ò–¥–µ–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫',
      description: '–î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ —Ç–æ—á–Ω–æ—Å—Ç—å 90% –∏–ª–∏ –≤—ã—à–µ',
      icon: 'üéØ'
    });
  }
  
  if (gameState.portfolio >= 150000) {
    achievements.push({
      id: 'portfolio-master',
      name: '–ú–∞—Å—Ç–µ—Ä –ø–æ—Ä—Ç—Ñ–µ–ª—è',
      description: '–£–≤–µ–ª–∏—á–µ–Ω –ø–æ—Ä—Ç—Ñ–µ–ª—å –Ω–∞ 50% –∏–ª–∏ –±–æ–ª—å—à–µ',
      icon: 'üí∞'
    });
  }
  
  if (gameState.reputation >= 5) {
    achievements.push({
      id: 'five-star-analyst',
      name: '–ü—è—Ç–∏–∑–≤–µ–∑–¥–æ—á–Ω—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫',
      description: '–î–æ—Å—Ç–∏–≥–Ω—É—Ç–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è',
      icon: '‚≠ê'
    });
  }
  
  return achievements;
}

// –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥—Å–∫–∞–∑–æ–∫ –¥–ª—è –Ω–æ–≤—ã—Ö –∏–≥—Ä–æ–∫–æ–≤
const HINTS = {
  stage1: [
    '–û–±—Ä–∞—â–∞–π—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ–±—ä–µ–º—ã —Ç–æ—Ä–≥–æ–≤ - –æ–Ω–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∏–Ω—Ç–µ—Ä–µ—Å –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤',
    '–í—ã—Å–æ–∫–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ–∫—Ç–æ—Ä–∞ –Ω–µ –≤—Å–µ–≥–¥–∞ –æ–∑–Ω–∞—á–∞–µ—Ç –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫',
    '–ù–æ–≤–æ—Å—Ç–∏ –º–æ–≥—É—Ç –¥–∞—Ç—å –≤–∞–∂–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –æ –±—É–¥—É—â–∏—Ö –¥–≤–∏–∂–µ–Ω–∏—è—Ö —Ä—ã–Ω–∫–∞'
  ],
  stage2: [
    '–ò—â–∏—Ç–µ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É —Ä–∞–∑–Ω—ã–º–∏ —Ç—Ä–µ–Ω–¥–∞–º–∏ –∏ —Å–µ–∫—Ç–æ—Ä–∞–º–∏',
    '–ê–Ω–æ–º–∞–ª–∏–∏ –≤ –¥–∞–Ω–Ω—ã—Ö —á–∞—Å—Ç–æ –ø—Ä–µ–¥–≤–µ—â–∞—é—Ç –≤–∞–∂–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è',
    '–°–∏–ª—å–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç –≤—ã—Å–æ–∫–∏–π –∏–º–ø—É–ª—å—Å –∏ –±–æ–ª—å—à–∏–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏'
  ],
  stage3: [
    '–î–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–º–æ–≥–∞–µ—Ç —Å–Ω–∏–∑–∏—Ç—å —Ä–∏—Å–∫–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è',
    '–ü—Ä–∏ —Ä–æ—Å—Ç–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏ —Å—Ç–æ–∏—Ç –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—â–∏—Ç–Ω—ã–µ –º–µ—Ä—ã',
    '–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–æ–ª–∂–Ω–∞ —É—á–∏—Ç—ã–≤–∞—Ç—å –º–µ–≥–∞—Ç—Ä–µ–Ω–¥—ã'
  ]
};

function showHint(stage) {
  const hints = HINTS[`stage${stage}`];
  if (hints && questUI) {
    const randomHint = hints[Math.floor(Math.random() * hints.length)];
    questUI.showToast(`üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: ${randomHint}`, 'info');
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
let hintTimer = null;

function startHintSystem() {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –∫–∞–∂–¥—ã–µ 60 —Å–µ–∫—É–Ω–¥ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
  const isNewUser = !localStorage.getItem('trendsQuestCompleted');
  
  if (isNewUser) {
    hintTimer = setInterval(() => {
      if (questEngine && questEngine.getGameState().isRunning) {
        const currentStage = questEngine.getGameState().currentStage;
        showHint(currentStage);
      }
    }, 60000); // –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
  }
}

function stopHintSystem() {
  if (hintTimer) {
    clearInterval(hintTimer);
    hintTimer = null;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
setTimeout(startHintSystem, 5000);

// –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.addEventListener('beforeunload', stopHintSystem);

console.log('üéÆ –ö–≤–µ—Å—Ç "–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤" –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!');
