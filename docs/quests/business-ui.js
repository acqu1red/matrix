/* ===== BUSINESS QUEST UI ===== */

class BusinessQuestUI {
  constructor(engine) {
    this.engine = engine;
    this.currentStage = 0;
    this.draggedCandidate = null;
    this.dragOverPosition = null;
    
    // DOM —ç–ª–µ–º–µ–Ω—Ç—ã
    this.elements = {
      introModal: null,
      questContent: null,
      stages: {},
      buttons: {},
      modals: {}
    };
    
    // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥—ã –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    this.handleStageChange = this.handleStageChange.bind(this);
    this.handleNicheSelection = this.handleNicheSelection.bind(this);
    this.handleCandidateHired = this.handleCandidateHired.bind(this);
    this.handleQuestCompleted = this.handleQuestCompleted.bind(this);
    
    this.initializeEventListeners();
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
  initialize() {
    console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –±–∏–∑–Ω–µ—Å-–∫–≤–µ—Å—Ç–∞...');
    
    this.cacheElements();
    this.setupEventListeners();
    this.renderCurrentStage();
    
    // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –¥–≤–∏–∂–∫–∞
    this.engine.on('stageChanged', this.handleStageChange);
    this.engine.on('nicheSelected', this.handleNicheSelection);
    this.engine.on('candidateHired', this.handleCandidateHired);
    this.engine.on('questCompleted', this.handleQuestCompleted);
    
    console.log('‚úÖ UI –±–∏–∑–Ω–µ—Å-–∫–≤–µ—Å—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }

  // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  cacheElements() {
    this.elements.introModal = document.getElementById('introModal');
    this.elements.questContent = document.querySelector('.quest-content');
    
    // –ö–Ω–æ–ø–∫–∏
    this.elements.buttons = {
      startQuest: document.getElementById('startQuest'),
      back: document.getElementById('btnBack'),
      confirmNiche: document.getElementById('confirmNiche'),
      confirmTeam: document.getElementById('confirmTeam'),
      nextMonth: document.getElementById('nextMonth'),
      finishQuest: document.getElementById('finishQuest')
    };
    
    // –≠—Ç–∞–ø—ã
    this.elements.stages = {
      businessNiche: document.getElementById('businessNiche'),
      teamHiring: document.getElementById('teamHiring'),
      businessManagement: document.getElementById('businessManagement'),
      questResults: document.getElementById('questResults')
    };
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
  setupEventListeners() {
    // –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç"
    if (this.elements.buttons.startQuest) {
      this.elements.buttons.startQuest.addEventListener('click', () => {
        this.startQuest();
      });
    }
    
    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
    if (this.elements.buttons.back) {
      this.elements.buttons.back.addEventListener('click', () => {
        this.goBack();
      });
    }
    
    // –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∏—à–∏
    if (this.elements.buttons.confirmNiche) {
      this.elements.buttons.confirmNiche.addEventListener('click', () => {
        this.confirmNicheSelection();
      });
    }
    
    // –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞"
    const skipCandidateBtn = document.getElementById('skipCandidate');
    if (skipCandidateBtn) {
      skipCandidateBtn.addEventListener('click', () => {
        this.skipCandidate();
      });
    }
    
    // –ö–Ω–æ–ø–∫–∞ "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–∏–∑–Ω–µ—Å"
    const launchBusinessBtn = document.getElementById('launchBusiness');
    if (launchBusinessBtn) {
      launchBusinessBtn.addEventListener('click', () => {
        this.launchBusiness();
      });
    }
    
    // –ö–Ω–æ–ø–∫–∞ —Å–ª–µ–¥—É—é—â–µ–≥–æ –º–µ—Å—è—Ü–∞
    if (this.elements.buttons.nextMonth) {
      this.elements.buttons.nextMonth.addEventListener('click', () => {
        this.nextMonth();
      });
    }
    
    // –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞
    if (this.elements.buttons.finishQuest) {
      this.elements.buttons.finishQuest.addEventListener('click', () => {
        this.finishQuest();
      });
    }
    
    // –í—ã–±–æ—Ä –Ω–∏—à–∏
    this.setupNicheSelection();
    
    // –ë–∏–∑–Ω–µ—Å-–¥–µ–π—Å—Ç–≤–∏—è
    this.setupBusinessActions();
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–±–æ—Ä–∞ –Ω–∏—à–∏
  setupNicheSelection() {
    const nicheCards = document.querySelectorAll('.niche-card');
    
    nicheCards.forEach(card => {
      card.addEventListener('click', () => {
        const nicheId = card.dataset.niche;
        this.selectNiche(nicheId);
      });
    });
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Drag & Drop
  setupDragAndDrop() {
    // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
    this.renderCandidates();
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º drag & drop
    this.setupCandidateDrag();
    this.setupPositionDrop();
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  setupCandidateDrag() {
    const candidateCards = document.querySelectorAll('.candidate-card');
    
    candidateCards.forEach(card => {
      card.addEventListener('dragstart', (e) => {
        this.handleDragStart(e, card);
      });
      
      card.addEventListener('dragend', (e) => {
        this.handleDragEnd(e);
      });
    });
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ drag & drop –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
  setupCurrentCandidateDrag() {
    const currentCandidateCard = document.querySelector('.current-candidate .candidate-card');
    if (!currentCandidateCard) return;
    
    currentCandidateCard.addEventListener('dragstart', (e) => {
      this.handleDragStart(e, currentCandidateCard);
    });
    
    currentCandidateCard.addEventListener('dragend', (e) => {
      this.handleDragEnd(e);
    });
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ drop –∑–æ–Ω –¥–ª—è –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
  setupPositionDrop() {
    const positionSlots = document.querySelectorAll('.position-slot');
    
    positionSlots.forEach(slot => {
      slot.addEventListener('dragover', (e) => {
        this.handleDragOver(e, slot);
      });
      
      slot.addEventListener('drop', (e) => {
        this.handleDrop(e, slot);
      });
      
      slot.addEventListener('dragleave', (e) => {
        this.handleDragLeave(e, slot);
      });
    });
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∏–∑–Ω–µ—Å-–¥–µ–π—Å—Ç–≤–∏–π
  setupBusinessActions() {
    const actionButtons = document.querySelectorAll('.action-btn');
    
    actionButtons.forEach(btn => {
      btn.addEventListener('click', () => {
        const actionType = btn.dataset.action;
        this.performBusinessAction(actionType);
      });
    });
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  handleDragStart(e, candidateCard) {
    this.draggedCandidate = candidateCard;
    candidateCard.classList.add('dragging');
    
    e.dataTransfer.effectAllowed = 'move';
    e.dataTransfer.setData('text/html', candidateCard.outerHTML);
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –∫ –±–ª–æ–∫–∞–º –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
    this.scrollToPositions();
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –Ω–∞–¥ drop –∑–æ–Ω–æ–π
  handleDragOver(e, positionSlot) {
    e.preventDefault();
    e.dataTransfer.dropEffect = 'move';
    
    if (this.draggedCandidate && positionSlot.dataset.occupied !== 'true') {
      positionSlot.classList.add('drag-over');
      this.dragOverPosition = positionSlot;
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö—É —ç–∫—Ä–∞–Ω–∞
      this.showDragNotification('–û—Ç–ø—É—Å—Ç–∏—Ç–µ –¥–ª—è –Ω–∞–π–º–∞ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞');
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ drop
  handleDrop(e, positionSlot) {
    e.preventDefault();
    
    if (this.draggedCandidate && this.dragOverPosition === positionSlot) {
      const candidateId = this.draggedCandidate.dataset.candidateId;
      const positionId = positionSlot.dataset.position;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–∑–∏—Ü–∏—è —Å–≤–æ–±–æ–¥–Ω–∞
      if (positionSlot.dataset.occupied === 'false') {
        // –ù–∞–Ω–∏–º–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
        if (this.hireCandidate(candidateId, positionId)) {
          // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –∫–∞–∫ –∑–∞–Ω—è—Ç—É—é
          positionSlot.dataset.occupied = 'true';
          this.updateConfirmTeamButton();
          this.showNextCandidate(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
          this.showToast('–ö–∞–Ω–¥–∏–¥–∞—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞–Ω—è—Ç!', 'success');
        } else {
          this.showToast('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–Ω—è—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞', 'error');
        }
      } else {
        this.showToast('–≠—Ç–∞ –ø–æ–∑–∏—Ü–∏—è —É–∂–µ –∑–∞–Ω—è—Ç–∞', 'warning');
      }
    }
    
    this.cleanupDragState();
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  handleDragEnd(e) {
    this.cleanupDragState();
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ drop –∑–æ–Ω—ã
  handleDragLeave(e, positionSlot) {
    if (this.dragOverPosition === positionSlot) {
      positionSlot.classList.remove('drag-over');
      this.dragOverPosition = null;
    }
  }

  // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  cleanupDragState() {
    if (this.draggedCandidate) {
      this.draggedCandidate.classList.remove('dragging');
      this.draggedCandidate = null;
    }
    
    if (this.dragOverPosition) {
      this.dragOverPosition.classList.remove('drag-over');
      this.dragOverPosition = null;
    }
    
    // –°–∫—Ä—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–∏
    this.hideDragNotification();
  }

  // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–∏
  showDragNotification(message) {
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    this.hideDragNotification();
    
    const notification = document.createElement('div');
    notification.className = 'drag-notification';
    notification.textContent = message;
    notification.id = 'dragNotification';
    
    document.body.appendChild(notification);
  }

  // –°–∫—Ä—ã—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–∏
  hideDragNotification() {
    const notification = document.getElementById('dragNotification');
    if (notification) {
      notification.remove();
    }
  }

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã –∫ –±–ª–æ–∫–∞–º –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
  scrollToPositions() {
    const positionsSection = document.querySelector('.positions-section');
    if (positionsSection) {
      positionsSection.scrollIntoView({ 
        behavior: 'smooth', 
        block: 'center',
        inline: 'center'
      });
    }
  }

  // –†–µ–Ω–¥–µ—Ä –Ω–∞–Ω—è—Ç–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
  renderHiredCandidate(positionSlot, candidateCard) {
    const candidateData = this.getCandidateData(candidateCard.dataset.candidateId);
    
    positionSlot.dataset.occupied = 'true';
    positionSlot.innerHTML = `
      <div class="hired-candidate">
        <div class="candidate-avatar">${candidateData.avatar || 'üë§'}</div>
        <div class="candidate-info">
          <h4>${candidateData.name}</h4>
          <p>${candidateData.specialty}</p>
          <div class="candidate-salary">${candidateData.salary} ‚ÇΩ/–º–µ—Å</div>
        </div>
        <button class="fire-btn" onclick="businessUI.fireCandidate('${positionSlot.dataset.position}')">üî•</button>
      </div>
    `;
  }

  // –£–≤–æ–ª—å–Ω–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
  fireCandidate(positionId) {
    if (this.engine.fireCandidate(positionId)) {
      const positionSlot = document.querySelector(`[data-position="${positionId}"]`);
      this.resetPositionSlot(positionSlot);
      this.updateConfirmTeamButton();
    }
  }

  // –°–±—Ä–æ—Å —Å–ª–æ—Ç–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
  resetPositionSlot(positionSlot) {
    positionSlot.dataset.occupied = 'false';
    positionSlot.innerHTML = `
      <div class="position-icon">${this.getPositionIcon(positionSlot.dataset.position)}</div>
      <div class="position-info">
        <h4>${this.getPositionName(positionSlot.dataset.position)}</h4>
        <p>${this.getPositionDescription(positionSlot.dataset.position)}</p>
      </div>
      <div class="candidate-placeholder">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞</div>
    `;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
  getPositionIcon(positionId) {
    const icons = {
      tech: 'üíª',
      marketing: 'üì¢',
      finance: 'üí∞',
      operations: '‚öôÔ∏è'
    };
    return icons[positionId] || 'üë§';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
  getPositionName(positionId) {
    const names = {
      tech: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
      marketing: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥-–¥–∏—Ä–µ–∫—Ç–æ—Ä',
      finance: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä',
      operations: '–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä'
    };
    return names[positionId] || '–î–æ–ª–∂–Ω–æ—Å—Ç—å';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
  getPositionDescription(positionId) {
    const descriptions = {
      tech: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–æ–π –∏ IT',
      marketing: '–ü—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ –∏ —Ä–µ–∫–ª–∞–º–∞',
      finance: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏',
      operations: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏'
    };
    return descriptions[positionId] || '–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏';
  }

  // –†–µ–Ω–¥–µ—Ä –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  renderCandidates() {
    const candidatesGrid = document.querySelector('.candidates-grid');
    if (!candidatesGrid) return;
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
    const availableCandidates = this.getAvailableCandidates();
    
    candidatesGrid.innerHTML = availableCandidates.map(candidate => `
      <div class="candidate-card" 
           data-candidate-id="${candidate.id}" 
           draggable="true">
        <div class="candidate-avatar">${candidate.avatar || 'üë§'}</div>
        <div class="candidate-name">${candidate.name}</div>
        <div class="candidate-specialty">${candidate.specialty}</div>
        <div class="candidate-stats">
          <div class="candidate-stat">
            <span class="stat-label">–û–ø—ã—Ç</span>
            <span class="stat-value">${candidate.experience}</span>
          </div>
          <div class="candidate-stat">
            <span class="stat-label">–ù–∞–≤—ã–∫–∏</span>
            <span class="stat-value">${candidate.skills.length}</span>
          </div>
        </div>
      </div>
    `).join('');
    
    // –ü–µ—Ä–µ–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º drag & drop –¥–ª—è –Ω–æ–≤—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
    this.setupCandidateDrag();
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  getAvailableCandidates() {
    // –§–∏–ª—å—Ç—Ä—É–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–∞–Ω—è—Ç—ã
    const hiredCandidateIds = Object.values(this.engine.gameState.hiredTeam)
      .map(employee => employee.id);
    
    return this.engine.candidates.filter(candidate => 
      !hiredCandidateIds.includes(candidate.id)
    );
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
  getCandidateData(candidateId) {
    return this.engine.candidates.find(c => c.id === candidateId) || {};
  }

  // –í—ã–±–æ—Ä –Ω–∏—à–∏
  selectNiche(nicheId) {
    // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫ –∏ –≤—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é
    document.querySelectorAll('.niche-card').forEach(c => c.classList.remove('selected'));
    const card = document.querySelector('[data-niche="' + nicheId + '"]');
    if (card) { card.classList.add('selected'); }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä –Ω–∏—à–∏ –∏ —Å—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø
    if (this.engine && typeof this.engine.selectNiche === 'function' && this.engine.selectNiche(nicheId)) {
      // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –µ—Å–ª–∏ –µ—Å—Ç—å
      if (this.elements && this.elements.buttons && this.elements.buttons.confirmNiche) {
        this.elements.buttons.confirmNiche.style.display = 'none';
      }
      // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É –∏ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∞
      if (this.engine && typeof this.engine.nextStage === 'function') {
        this.engine.nextStage();
      }
      if (typeof this.renderCurrentStage === 'function') {
        this.renderCurrentStage();
      }
      return true;
    }
    return false;
  }

}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.BusinessQuestUI = BusinessQuestUI;

