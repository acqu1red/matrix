/* ===== BUSINESS QUEST UI ===== */

class BusinessQuestUI {
  constructor(engine) {
    this.engine = engine;
    this.currentStage = 1;
    this.draggedCandidate = null;
    this.dragOverPosition = null;
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã UI
    this.elements = {
      introModal: null,
      questContent: null,
      progressBar: null,
      progressFill: null,
      progressSteps: null,
      toast: null
    };
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ UI
    this.uiState = {
      isInitialized: false,
      isDragging: false,
      showHints: true
    };
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
  initialize() {
    console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è BusinessQuestUI...');
    
    this.cacheElements();
    this.bindEvents();
    this.initializeDragAndDrop();
    this.updateProgress();
    this.showStage(this.currentStage);
    
    this.uiState.isInitialized = true;
    console.log('‚úÖ BusinessQuestUI –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }
  
  // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  cacheElements() {
    this.elements.introModal = document.getElementById('introModal');
    this.elements.questContent = document.querySelector('.quest-content');
    this.elements.progressBar = document.querySelector('.quest-progress');
    this.elements.progressFill = document.getElementById('progressFill');
    this.elements.progressSteps = document.querySelectorAll('.progress-steps .step');
    this.elements.toast = document.getElementById('toast');
  }
  
  // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
  bindEvents() {
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç"
    const startQuestBtn = document.getElementById('startQuest');
    if (startQuestBtn) {
      startQuestBtn.addEventListener('click', () => this.startQuest());
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    const btnBack = document.getElementById('btnBack');
    if (btnBack) {
      btnBack.addEventListener('click', () => this.goBack());
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤—ã–±–æ—Ä–∞ –Ω–∏—à–∏
    document.querySelectorAll('.niche-card').forEach(card => {
      card.addEventListener('click', (e) => this.handleNicheSelection(e));
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –Ω–∏—à–∏
    const selectNicheBtn = document.getElementById('selectNiche');
    if (selectNicheBtn) {
      selectNicheBtn.addEventListener('click', () => this.handleSelectNiche());
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
    const completeTeamBtn = document.getElementById('completeTeam');
    if (completeTeamBtn) {
      completeTeamBtn.addEventListener('click', () => this.handleTeamCompletion());
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–≤–∞—Ä—Ç–∞–ª–∞
    const nextQuarterBtn = document.getElementById('nextQuarter');
    if (nextQuarterBtn) {
      nextQuarterBtn.addEventListener('click', () => this.handleNextQuarter());
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞
    const finishQuestBtn = document.getElementById('finishQuest');
    if (finishQuestBtn) {
      finishQuestBtn.addEventListener('click', () => this.handleQuestCompletion());
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã
    const skipTeamBtn = document.getElementById('skipTeam');
    if (skipTeamBtn) {
      skipTeamBtn.addEventListener('click', () => this.handleSkipTeam());
    }
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è drag & drop
  initializeDragAndDrop() {
    this.setupCandidateCards();
    this.setupDropZones();
    this.setupTouchEvents();
  }
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  setupCandidateCards() {
    const candidatesGrid = document.querySelector('.candidates-grid');
    if (!candidatesGrid) return;
    
    // –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
    candidatesGrid.innerHTML = '';
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
    const availableCandidates = this.engine.getAvailableCandidates();
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
    availableCandidates.forEach(candidate => {
      const candidateCard = this.createCandidateCard(candidate);
      candidatesGrid.appendChild(candidateCard);
    });
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
  createCandidateCard(candidate) {
    const card = document.createElement('div');
    card.className = 'candidate-card';
    card.draggable = true;
    card.dataset.candidateId = candidate.id;
    
    card.innerHTML = `
      <div class="candidate-avatar">${candidate.avatar}</div>
      <div class="candidate-name">${candidate.name}</div>
      <div class="candidate-skills">
        ${candidate.skills.map(skill => `<span class="candidate-skill">${skill}</span>`).join('')}
      </div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ drag & drop
    card.addEventListener('dragstart', (e) => this.handleDragStart(e, candidate));
    card.addEventListener('dragend', (e) => this.handleDragEnd(e));
    
    return card;
  }
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–æ–Ω —Å–±—Ä–æ—Å–∞
  setupDropZones() {
    const dropZones = document.querySelectorAll('.candidate-drop-zone');
    
    dropZones.forEach(zone => {
      zone.addEventListener('dragover', (e) => this.handleDragOver(e, zone));
      zone.addEventListener('dragleave', (e) => this.handleDragLeave(e, zone));
      zone.addEventListener('drop', (e) => this.handleDrop(e, zone));
      
      // Touch —Å–æ–±—ã—Ç–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      zone.addEventListener('touchstart', (e) => this.handleTouchStart(e, zone));
      zone.addEventListener('touchend', (e) => this.handleTouchEnd(e, zone));
    });
  }
  
  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ touch —Å–æ–±—ã—Ç–∏–π
  setupTouchEvents() {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É touch –¥–ª—è drag & drop –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    if ('ontouchstart' in window) {
      document.addEventListener('touchmove', (e) => {
        if (this.uiState.isDragging) {
          e.preventDefault();
        }
      }, { passive: false });
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—á–∞–ª–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  handleDragStart(e, candidate) {
    this.draggedCandidate = candidate;
    this.uiState.isDragging = true;
    
    e.dataTransfer.effectAllowed = 'move';
    e.dataTransfer.setData('text/plain', candidate.id);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
    e.target.classList.add('dragging');
    
    console.log('üéØ –ù–∞—á–∞—Ç–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞:', candidate.name);
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
  handleDragEnd(e) {
    this.uiState.isDragging = false;
    this.draggedCandidate = null;
    
    // –£–±–∏—Ä–∞–µ–º –≤–∏–∑—É–∞–ª—å–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã
    e.target.classList.remove('dragging');
    
    console.log('‚úÖ –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –Ω–∞–¥ –∑–æ–Ω–æ–π
  handleDragOver(e, zone) {
    e.preventDefault();
    e.dataTransfer.dropEffect = 'move';
    
    if (this.draggedCandidate) {
      zone.classList.add('drag-over');
      this.dragOverPosition = zone;
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∑–æ–Ω—ã
  handleDragLeave(e, zone) {
    zone.classList.remove('drag-over');
    this.dragOverPosition = null;
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞
  handleDrop(e, zone) {
    e.preventDefault();
    
    if (this.draggedCandidate) {
      const positionId = zone.dataset.position;
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
      if (this.draggedCandidate.role === positionId) {
        // –ù–∞–∑–Ω–∞—á–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å
        const success = this.engine.assignCandidate(this.draggedCandidate.id, positionId);
        
        if (success) {
          this.showToast(`–ö–∞–Ω–¥–∏–¥–∞—Ç ${this.draggedCandidate.name} –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å!`, 'success');
          this.updateTeamDisplay();
          this.checkTeamCompletion();
        } else {
          this.showToast('–û—à–∏–±–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞!', 'error');
        }
      } else {
        this.showToast('–ö–∞–Ω–¥–∏–¥–∞—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —ç—Ç–æ–π –¥–æ–ª–∂–Ω–æ—Å—Ç–∏!', 'error');
      }
      
      zone.classList.remove('drag-over');
      this.dragOverPosition = null;
    }
  }
  
  // Touch —Å–æ–±—ã—Ç–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  handleTouchStart(e, zone) {
    if (this.uiState.isDragging) {
      zone.classList.add('drag-over');
    }
  }
  
  handleTouchEnd(e, zone) {
    zone.classList.remove('drag-over');
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
  updateTeamDisplay() {
    const team = this.engine.getGameState().team;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∑–æ–Ω—ã —Å–±—Ä–æ—Å–∞
    document.querySelectorAll('.candidate-drop-zone').forEach(zone => {
      const positionId = zone.dataset.position;
      const assignment = team[positionId];
      
      if (assignment) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
        zone.classList.add('filled');
        zone.innerHTML = `
          <div class="assigned-candidate">
            <div class="candidate-avatar">${assignment.candidate.avatar}</div>
            <div class="candidate-name">${assignment.candidate.name}</div>
            <button class="remove-candidate" onclick="businessUI.removeCandidate('${positionId}')">‚ùå</button>
          </div>
        `;
      } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç—É—é –∑–æ–Ω—É
        zone.classList.remove('filled');
        zone.innerHTML = '<div class="drop-hint">–ü–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ —Å—é–¥–∞</div>';
      }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–º–∞–Ω–¥—ã
    this.updateTeamStats();
  }
  
  // –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏
  removeCandidate(positionId) {
    const success = this.engine.removeCandidate(positionId);
    
    if (success) {
      this.showToast('–ö–∞–Ω–¥–∏–¥–∞—Ç —É–¥–∞–ª–µ–Ω —Å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏!', 'info');
      this.updateTeamDisplay();
      this.checkTeamCompletion();
    }
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–º–∞–Ω–¥—ã
  updateTeamStats() {
    const teamStats = this.engine.getTeamStats();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –µ—Å–ª–∏ –µ—Å—Ç—å
    const statsElement = document.querySelector('.team-stats');
    if (statsElement) {
      statsElement.innerHTML = `
        <div class="stat-item">
          <span class="stat-label">–†–∞–∑–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã</span>
          <span class="stat-value">${teamStats.totalSalary > 0 ? teamStats.totalSalary : 0}</span>
        </div>
        <div class="stat-item">
          <span class="stat-label">–°—Ä–µ–¥–Ω–∏–π –æ–ø—ã—Ç</span>
          <span class="stat-value">${Math.round(teamStats.avgExperience)} –ª–µ—Ç</span>
        </div>
        <div class="stat-item">
          <span class="stat-label">–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</span>
          <span class="stat-value">${Math.round(teamStats.avgEfficiency * 100)}%</span>
        </div>
      `;
    }
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
  checkTeamCompletion() {
    const isComplete = this.engine.isTeamComplete();
    const completeTeamBtn = document.getElementById('completeTeam');
    
    if (completeTeamBtn) {
      completeTeamBtn.disabled = !isComplete;
      
      if (isComplete) {
        completeTeamBtn.classList.add('ready');
        this.showToast('–ö–æ–º–∞–Ω–¥–∞ —Å–æ–±—Ä–∞–Ω–∞! –ú–æ–∂–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É.', 'success');
      }
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –Ω–∏—à–∏
  handleNicheSelection(e) {
    if (e && e.currentTarget) {
      const nicheCard = e.currentTarget;
      const nicheId = nicheCard.dataset.niche;
      
      // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
      document.querySelectorAll('.niche-card').forEach(card => {
        card.classList.remove('selected');
      });
      
      // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
      nicheCard.classList.add('selected');
      
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞
      const selectNicheBtn = document.getElementById('selectNiche');
      if (selectNicheBtn) {
        selectNicheBtn.disabled = false;
      }
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –Ω–∏—à—É
      this.engine.selectNiche(nicheId);
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–í—ã–±—Ä–∞—Ç—å –Ω–∏—à—É"
  handleSelectNiche() {
    const selectedNiche = document.querySelector('.niche-card.selected');
    if (selectedNiche) {
      const nicheId = selectedNiche.dataset.niche;
      this.engine.selectNiche(nicheId);
      this.showToast(`–ù–∏—à–∞ "${nicheId}" –≤—ã–±—Ä–∞–Ω–∞!`, 'success');
      this.nextStage();
    } else {
      this.showToast('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏—à—É!', 'error');
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–¥–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
  handleTeamCompletion() {
    if (this.engine.isTeamComplete()) {
      this.showToast('–ö–æ–º–∞–Ω–¥–∞ —Å–æ–±—Ä–∞–Ω–∞!', 'success');
      this.nextStage();
    } else {
      this.showToast('–ù–µ –≤—Å–µ –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!', 'error');
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∫–≤–∞—Ä—Ç–∞–ª–∞
  handleNextQuarter() {
    const success = this.engine.nextQuarter();
    
    if (success) {
      this.updateBusinessStats();
      this.showToast('–ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∫–≤–∞—Ä—Ç–∞–ª—É!', 'info');
    } else {
      this.showToast('–ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!', 'success');
      this.showFinalResults();
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–≤–µ—Å—Ç–∞
  handleQuestCompletion() {
    const results = this.engine.getFinalResults();
    this.showFinalResults(results);
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–ø—É—Å–∫–∞ –∫–æ–º–∞–Ω–¥—ã
  handleSkipTeam() {
    this.engine.skipTeamSelection();
    this.showToast('–ü–æ–¥–±–æ—Ä –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–ø—É—â–µ–Ω!', 'info');
    this.updateTeamDisplay();
    this.checkTeamCompletion();
  }
  
  // –ó–∞–ø—É—Å–∫ –∫–≤–µ—Å—Ç–∞
  startQuest() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –∫–≤–µ—Å—Ç–∞...');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    if (this.elements.introModal) {
      this.elements.introModal.style.display = 'none';
      console.log('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–∫—Ä—ã—Ç–æ');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –∫–≤–µ—Å—Ç–∞
    if (this.elements.questContent) {
      this.elements.questContent.style.display = 'block';
      console.log('‚úÖ –ö–æ–Ω—Ç–µ–Ω—Ç –∫–≤–µ—Å—Ç–∞ –ø–æ–∫–∞–∑–∞–Ω');
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø –∫–≤–µ—Å—Ç–∞
    this.showStage(1);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    this.updateProgress();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    this.showToast('–ö–≤–µ—Å—Ç –Ω–∞—á–∞–ª—Å—è! –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏—à—É –¥–ª—è –±–∏–∑–Ω–µ—Å–∞.', 'success');
    
    console.log('üéØ –ö–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');
  }
  
  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —ç—Ç–∞–ø—É
  nextStage() {
    if (this.currentStage < 4) {
      this.currentStage++;
      this.showStage(this.currentStage);
      this.updateProgress();
    }
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–∞–ø
  showStage(stageNumber) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã
    document.querySelectorAll('.quest-stage').forEach(stage => {
      stage.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç—Ç–∞–ø
    const targetStage = document.getElementById(this.getStageId(stageNumber));
    if (targetStage) {
      targetStage.classList.add('active');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    this.updateProgress();
    
    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç—Ç–∞–ø–∞
    switch (stageNumber) {
      case 1:
        this.initializeNicheSelection();
        break;
      case 2:
        this.initializeTeamSelection();
        break;
      case 3:
        this.initializeBusinessManagement();
        break;
      case 4:
        this.initializeResults();
        break;
    }
  }
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ ID —ç—Ç–∞–ø–∞
  getStageId(stageNumber) {
    const stageIds = {
      1: 'nicheSelection',
      2: 'teamSelection',
      3: 'businessManagement',
      4: 'results'
    };
    return stageIds[stageNumber] || 'nicheSelection';
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ –Ω–∏—à–∏
  initializeNicheSelection() {
    console.log('üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ –Ω–∏—à–∏');
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
  initializeTeamSelection() {
    console.log('üë• –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã');
    this.setupCandidateCards();
    this.updateTeamDisplay();
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–æ–º
  initializeBusinessManagement() {
    console.log('‚ö° –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–æ–º');
    this.updateBusinessStats();
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  initializeResults() {
    console.log('üèÜ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
    const results = this.engine.getFinalResults();
    this.showFinalResults(results);
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–∏–∑–Ω–µ—Å–∞
  updateBusinessStats() {
    const stats = this.engine.getGameState().businessStats;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const revenueElement = document.getElementById('revenue');
    if (revenueElement) {
      revenueElement.textContent = `${stats.revenue.toLocaleString()} ‚ÇΩ`;
    }
    
    const growthElement = document.getElementById('growth');
    if (growthElement) {
      growthElement.textContent = `${stats.growth}%`;
    }
    
    const teamSizeElement = document.getElementById('teamSize');
    if (teamSizeElement) {
      teamSizeElement.textContent = stats.teamSize;
    }
    
    const reputationElement = document.getElementById('reputation');
    if (reputationElement) {
      reputationElement.textContent = stats.reputation;
    }
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
  showFinalResults(results) {
    // –û–±–Ω–æ–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    const finalRevenueElement = document.getElementById('finalRevenue');
    if (finalRevenueElement) {
      finalRevenueElement.textContent = `${results.totalRevenue.toLocaleString()} ‚ÇΩ`;
    }
    
    const finalTeamSizeElement = document.getElementById('finalTeamSize');
    if (finalTeamSizeElement) {
      finalTeamSizeElement.textContent = results.finalTeamSize;
    }
    
    const finalReputationElement = document.getElementById('finalReputation');
    if (finalReputationElement) {
      finalReputationElement.textContent = results.finalReputation;
    }
    
    const finalGrowthElement = document.getElementById('finalGrowth');
    if (finalGrowthElement) {
      finalGrowthElement.textContent = `${results.finalGrowth}%`;
    }
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  updateProgress() {
    const progress = (this.currentStage / 4) * 100;
    
    if (this.elements.progressFill) {
      this.elements.progressFill.style.width = `${progress}%`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —à–∞–≥–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    this.elements.progressSteps.forEach((step, index) => {
      const stepNumber = index + 1;
      
      if (stepNumber < this.currentStage) {
        step.classList.add('completed');
        step.classList.remove('active');
      } else if (stepNumber === this.currentStage) {
        step.classList.add('active');
        step.classList.remove('completed');
      } else {
        step.classList.remove('active', 'completed');
      }
    });
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showToast(message, type = 'info') {
    if (!this.elements.toast) return;
    
    this.elements.toast.textContent = message;
    this.elements.toast.className = `toast ${type} show`;
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      this.elements.toast.classList.remove('show');
    }, 3000);
    
    console.log(`üì¢ Toast: ${message} (${type})`);
  }
  
  // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥
  goBack() {
    if (window.Telegram && window.Telegram.WebApp) {
      window.Telegram.WebApp.close();
    } else {
      window.history.back();
    }
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
  handleResize() {
    // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏ –ø–æ–∑–∏—Ü–∏–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    this.updateLayout();
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–∞–∫–µ—Ç–∞
  updateLayout() {
    // –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
    const isMobile = window.innerWidth <= 768;
    
    if (isMobile) {
      document.body.classList.add('mobile');
    } else {
      document.body.classList.remove('mobile');
    }
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI
  refreshUI() {
    this.updateProgress();
    this.updateTeamDisplay();
    this.updateBusinessStats();
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
  initializeAnimations() {
    // –î–æ–±–∞–≤–ª—è–µ–º CSS –∫–ª–∞—Å—Å—ã –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–π
    document.body.classList.add('animations-ready');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    this.animateElements();
  }
  
  // –ê–Ω–∏–º–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  animateElements() {
    const elements = document.querySelectorAll('.quest-stage, .niche-card, .candidate-card, .position-slot');
    
    elements.forEach((element, index) => {
      setTimeout(() => {
        element.classList.add('animate-in');
      }, index * 100);
    });
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
  handleScroll() {
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
    if (this.scrollTimeout) {
      clearTimeout(this.scrollTimeout);
    }
    
    this.scrollTimeout = setTimeout(() => {
      // –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
    }, 100);
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞—Å–∞–Ω–∏–π
  handleTouch() {
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è touch —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    if (this.touchTimeout) {
      clearTimeout(this.touchTimeout);
    }
    
    this.touchTimeout = setTimeout(() => {
      // –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞—Å–∞–Ω–∏–π
    }, 100);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç –∫–ª–∞—Å—Å–∞
window.BusinessQuestUI = BusinessQuestUI;
