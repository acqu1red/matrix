/* ===== BUSINESS QUEST UI - OPTIMIZED FOR MINIAPPS ===== */

// –û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å UI –¥–ª—è –±–∏–∑–Ω–µ—Å-–∫–≤–µ—Å—Ç–∞
class BusinessQuestUI {
  constructor() {
    this.currentStage = 1;
    this.selectedNiche = null;
    this.teamMembers = {};
    this.businessStats = {
      revenue: 0,
      growth: 0,
      teamSize: 0,
      reputation: 0
    };
    
    this.initialize();
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI
  initialize() {
    console.log('üé® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –¥–ª—è –±–∏–∑–Ω–µ—Å-–∫–≤–µ—Å—Ç–∞...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    this.initializeIntroModal();
    this.initializeNicheSelection();
    this.initializeTeamSelection();
    this.initializeBusinessManagement();
    this.initializeResults();
    this.initializeProgressBar();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    this.showIntroModal();
    
    console.log('‚úÖ UI –¥–ª—è –±–∏–∑–Ω–µ—Å-–∫–≤–µ—Å—Ç–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  initializeIntroModal() {
    const startQuestBtn = document.getElementById('startQuest');
    if (startQuestBtn) {
      startQuestBtn.addEventListener('click', () => this.startQuest());
    }
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—ã–±–æ—Ä–∞ –Ω–∏—à–∏
  initializeNicheSelection() {
    const nicheCards = document.querySelectorAll('.niche-card');
    
    nicheCards.forEach(card => {
      card.addEventListener('click', () => {
        this.selectNiche(card);
      });
    });
    
    const selectNicheBtn = document.getElementById('selectNiche');
    if (selectNicheBtn) {
      selectNicheBtn.addEventListener('click', () => this.confirmNicheSelection());
    }
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
  initializeTeamSelection() {
    this.initializeCandidates();
    this.initializePositions();
    
    const completeTeamBtn = document.getElementById('completeTeam');
    if (completeTeamBtn) {
      completeTeamBtn.addEventListener('click', () => this.completeTeamSelection());
    }
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  initializeCandidates() {
    const candidatesGrid = document.querySelector('.candidates-grid');
    if (!candidatesGrid) return;
    
    // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É
    candidatesGrid.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –∏–∑ –¥–∞–Ω–Ω—ã—Ö
    const candidates = window.BUSINESS_QUEST_DATA?.candidates || [
      { id: 'candidate1', name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤', skills: '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ, –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è', avatar: 'üë®‚Äçüíº' },
      { id: 'candidate2', name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', skills: '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', avatar: 'üë©‚Äçüé®' },
      { id: 'candidate3', name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤', skills: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', avatar: 'üë®‚Äçüíª' },
      { id: 'candidate4', name: '–ê–Ω–Ω–∞ –í–æ–ª–∫–æ–≤–∞', skills: '–≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞, –û–ø—ã—Ç', avatar: 'üë©‚Äçüî¨' }
    ];
    
    candidates.forEach(candidate => {
      const candidateCard = this.createCandidateCard(candidate);
      candidatesGrid.appendChild(candidateCard);
    });
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
  createCandidateCard(candidate) {
    const card = document.createElement('div');
    card.className = 'candidate-card';
    card.dataset.candidateId = candidate.id;
    card.draggable = true;
    
    card.innerHTML = `
      <div class="candidate-avatar">${candidate.avatar}</div>
      <div class="candidate-name">${candidate.name}</div>
      <div class="candidate-skills">${candidate.skills}</div>
    `;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ drag & drop
    card.addEventListener('dragstart', this.handleDragStart.bind(this));
    card.addEventListener('dragend', this.handleDragEnd.bind(this));
    
    return card;
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π
  initializePositions() {
    const dropZones = document.querySelectorAll('.candidate-drop-zone');
    
    dropZones.forEach(zone => {
      zone.addEventListener('dragover', this.handleDragOver.bind(this));
      zone.addEventListener('drop', this.handleDrop.bind(this));
      zone.addEventListener('dragenter', this.handleDragEnter.bind(this));
      zone.addEventListener('dragleave', this.handleDragLeave.bind(this));
    });
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–æ–º
  initializeBusinessManagement() {
    this.initializeDecisions();
    
    const nextQuarterBtn = document.getElementById('nextQuarter');
    if (nextQuarterBtn) {
      nextQuarterBtn.addEventListener('click', () => this.nextQuarter());
    }
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏–π
  initializeDecisions() {
    const decisionsGrid = document.querySelector('.decisions-grid');
    if (!decisionsGrid) return;
    
    // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É
    decisionsGrid.innerHTML = '';
    
    // –°–æ–∑–¥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö
    const decisions = window.BUSINESS_QUEST_DATA?.decisions || [
      {
        id: 'decision1',
        title: '–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥',
        description: '–£–≤–µ–ª–∏—á–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π –±—é–¥–∂–µ—Ç –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
        impact: { revenue: '+15%', risk: '–°—Ä–µ–¥–Ω–∏–π' }
      },
      {
        id: 'decision2',
        title: '–†–∞—Å—à–∏—Ä–∏—Ç—å –∫–æ–º–∞–Ω–¥—É',
        description: '–ù–∞–Ω—è—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –¥–ª—è —Ä–æ—Å—Ç–∞',
        impact: { revenue: '+25%', risk: '–í—ã—Å–æ–∫–∏–π' }
      },
      {
        id: 'decision3',
        title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã',
        description: '–£–ª—É—á—à–∏—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã',
        impact: { revenue: '+10%', risk: '–ù–∏–∑–∫–∏–π' }
      },
      {
        id: 'decision4',
        title: '–†–∞–∑–≤–∏–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞',
        description: '–ù–∞–π—Ç–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤',
        impact: { revenue: '+20%', risk: '–°—Ä–µ–¥–Ω–∏–π' }
      }
    ];
    
    decisions.forEach(decision => {
      const decisionCard = this.createDecisionCard(decision);
      decisionsGrid.appendChild(decisionCard);
    });
  }
  
  // –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–µ—à–µ–Ω–∏—è
  createDecisionCard(decision) {
    const card = document.createElement('div');
    card.className = 'decision-card';
    card.dataset.decisionId = decision.id;
    
    card.innerHTML = `
      <div class="decision-title">${decision.title}</div>
      <div class="decision-description">${decision.description}</div>
      <div class="decision-impact">
        <span>–î–æ—Ö–æ–¥: ${decision.impact.revenue}</span>
        <span>–†–∏—Å–∫: ${decision.impact.risk}</span>
      </div>
    `;
    
    card.addEventListener('click', () => {
      this.applyDecision(decision);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
      card.classList.add('success-animation');
      setTimeout(() => card.classList.remove('success-animation'), 600);
    });
    
    return card;
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  initializeResults() {
    const finishQuestBtn = document.getElementById('finishQuest');
    if (finishQuestBtn) {
      finishQuestBtn.addEventListener('click', () => this.finishQuest());
    }
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
  initializeProgressBar() {
    // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
    const questProgress = document.querySelector('.quest-progress');
    if (questProgress) {
      questProgress.style.display = 'none';
    }
  }
  
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–≤–µ—Å—Ç–∞
  startQuest() {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    this.hideIntroModal();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const questContent = document.querySelector('.quest-content');
    if (questContent) {
      questContent.style.display = 'block';
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    const questProgress = document.querySelector('.quest-progress');
    if (questProgress) {
      questProgress.style.display = 'block';
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø
    this.showStage(1);
    
    this.showToast('üöÄ –ö–≤–µ—Å—Ç –Ω–∞—á–∞–ª—Å—è! –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏—à—É –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.', 'success');
  }
  
  // –í—ã–±–æ—Ä –Ω–∏—à–∏
  selectNiche(card) {
    // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
    const allCards = document.querySelectorAll('.niche-card');
    allCards.forEach(c => c.classList.remove('selected'));
    
    // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
    card.classList.add('selected');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –Ω–∏—à—É
    this.selectedNiche = card.dataset.niche;
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞
    const selectBtn = document.getElementById('selectNiche');
    if (selectBtn) {
      selectBtn.disabled = false;
      selectBtn.classList.add('success-animation');
      setTimeout(() => selectBtn.classList.remove('success-animation'), 600);
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
    const nicheName = card.querySelector('h3').textContent;
    this.showToast(`–í—ã–±—Ä–∞–Ω–∞ –Ω–∏—à–∞: ${nicheName}`, 'success');
  }
  
  // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –Ω–∏—à–∏
  confirmNicheSelection() {
    if (!this.selectedNiche) {
      this.showToast('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏—à—É!', 'error');
      return;
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫–æ –≤—Ç–æ—Ä–æ–º—É —ç—Ç–∞–ø—É
    this.showStage(2);
    
    this.showToast('‚úÖ –ù–∏—à–∞ –≤—ã–±—Ä–∞–Ω–∞! –¢–µ–ø–µ—Ä—å —Å–æ–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É.', 'success');
  }
  
  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø–æ–¥–±–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
  completeTeamSelection() {
    const dropZones = document.querySelectorAll('.candidate-drop-zone');
    let filledPositions = 0;
    
    dropZones.forEach(zone => {
      if (zone.querySelector('.candidate-card')) {
        filledPositions++;
      }
    });
    
    if (filledPositions < 4) {
      this.showToast('–ù—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏!', 'error');
      return;
    }
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç—Ä–µ—Ç—å–µ–º—É —ç—Ç–∞–ø—É
    this.showStage(3);
    
    this.showToast('üë• –ö–æ–º–∞–Ω–¥–∞ —Å–æ–±—Ä–∞–Ω–∞! –¢–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –±–∏–∑–Ω–µ—Å–æ–º.', 'success');
  }
  
  // –°–ª–µ–¥—É—é—â–∏–π –∫–≤–∞—Ä—Ç–∞–ª
  nextQuarter() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    this.businessStats.revenue += this.businessStats.revenue * 0.1; // +10% –∫ –¥–æ—Ö–æ–¥—É
    this.businessStats.growth += 5; // +5% –∫ —Ä–æ—Å—Ç—É
    this.businessStats.reputation += 2; // +2 –∫ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    this.updateBusinessStats();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
    this.showToast('üìà –ö–≤–∞—Ä—Ç–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω! –ë–∏–∑–Ω–µ—Å —Ä–∞—Å—Ç–µ—Ç.', 'success');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
    if (this.businessStats.revenue >= 100000) {
      setTimeout(() => {
        this.showStage(4);
        this.showToast('üèÜ –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º.', 'success');
      }, 1000);
    }
  }
  
  // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
  finishQuest() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    this.updateFinalStats();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
    this.showToast('üéâ –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω—ã–º –±–∏–∑–Ω–µ—Å–æ–º!', 'success');
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–≤–µ—Å—Ç–∞–º
    setTimeout(() => {
      this.goBack();
    }, 2000);
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–∞–ø
  showStage(stageNumber) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã
    const stages = document.querySelectorAll('.quest-stage');
    stages.forEach(stage => stage.classList.remove('active'));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç—Ç–∞–ø
    const targetStage = document.getElementById(this.getStageId(stageNumber));
    if (targetStage) {
      targetStage.classList.add('active');
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    this.updateProgress(stageNumber);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø
    this.currentStage = stageNumber;
  }
  
  // –ü–æ–ª—É—á–∏—Ç—å ID —ç—Ç–∞–ø–∞
  getStageId(stageNumber) {
    const stageIds = {
      1: 'nicheSelection',
      2: 'teamSelection',
      3: 'businessManagement',
      4: 'results'
    };
    return stageIds[stageNumber] || 'nicheSelection';
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
  updateProgress(stageNumber) {
    const progressFill = document.getElementById('progressFill');
    const steps = document.querySelectorAll('.step');
    
    if (progressFill) {
      progressFill.style.width = `${stageNumber * 25}%`;
    }
    
    steps.forEach((step, index) => {
      const stepNumber = index + 1;
      
      if (stepNumber < stageNumber) {
        step.classList.add('completed');
        step.classList.remove('active');
      } else if (stepNumber === stageNumber) {
        step.classList.add('active');
        step.classList.remove('completed');
      } else {
        step.classList.remove('active', 'completed');
      }
    });
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  updateBusinessStats() {
    const revenueEl = document.getElementById('revenue');
    const growthEl = document.getElementById('growth');
    const teamSizeEl = document.getElementById('teamSize');
    const reputationEl = document.getElementById('reputation');
    
    if (revenueEl) revenueEl.textContent = `${this.businessStats.revenue.toLocaleString()} ‚ÇΩ`;
    if (growthEl) growthEl.textContent = `${this.businessStats.growth}%`;
    if (teamSizeEl) teamSizeEl.textContent = this.businessStats.teamSize;
    if (reputationEl) reputationEl.textContent = this.businessStats.reputation;
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
  updateFinalStats() {
    const finalRevenue = document.getElementById('finalRevenue');
    const finalTeamSize = document.getElementById('finalTeamSize');
    const finalReputation = document.getElementById('finalReputation');
    const finalGrowth = document.getElementById('finalGrowth');
    
    if (finalRevenue) finalRevenue.textContent = `${this.businessStats.revenue.toLocaleString()} ‚ÇΩ`;
    if (finalTeamSize) finalTeamSize.textContent = this.businessStats.teamSize;
    if (finalReputation) finalReputation.textContent = this.businessStats.reputation;
    if (finalGrowth) finalGrowth.textContent = `${this.businessStats.growth}%`;
  }
  
  // –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è
  applyDecision(decision) {
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ—à–µ–Ω–∏—è
    if (decision.impact.revenue.includes('+')) {
      const increase = parseInt(decision.impact.revenue);
      this.businessStats.revenue += this.businessStats.revenue * (increase / 100);
      this.businessStats.growth += increase;
    }
    
    if (decision.impact.risk === '–ù–∏–∑–∫–∏–π') {
      this.businessStats.reputation += 5;
    } else if (decision.impact.risk === '–°—Ä–µ–¥–Ω–∏–π') {
      this.businessStats.reputation += 3;
    } else {
      this.businessStats.reputation += 1;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    this.updateBusinessStats();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
    this.showToast(`–†–µ—à–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ: ${decision.title}`, 'success');
  }
  
  // Drag & Drop –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
  handleDragStart(e) {
    e.target.classList.add('dragging');
    e.dataTransfer.setData('text/plain', e.target.dataset.candidateId);
    e.dataTransfer.effectAllowed = 'move';
  }
  
  handleDragEnd(e) {
    e.target.classList.remove('dragging');
  }
  
  handleDragOver(e) {
    e.preventDefault();
    e.dataTransfer.dropEffect = 'move';
  }
  
  handleDragEnter(e) {
    e.preventDefault();
    const dropZone = e.target.closest('.candidate-drop-zone');
    if (dropZone) {
      dropZone.classList.add('drag-over');
    }
  }
  
  handleDragLeave(e) {
    const dropZone = e.target.closest('.candidate-drop-zone');
    if (dropZone) {
      dropZone.classList.remove('drag-over');
    }
  }
  
  handleDrop(e) {
    e.preventDefault();
    const dropZone = e.target.closest('.candidate-drop-zone');
    const candidateId = e.dataTransfer.getData('text/plain');
    const candidateCard = document.querySelector(`[data-candidate-id="${candidateId}"]`);
    
    if (dropZone && candidateCard) {
      // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã drag-over
      dropZone.classList.remove('drag-over');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–∑–∏—Ü–∏—è —Å–≤–æ–±–æ–¥–Ω–∞
      if (!dropZone.querySelector('.candidate-card')) {
        // –ö–ª–æ–Ω–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
        const clonedCard = candidateCard.cloneNode(true);
        clonedCard.draggable = false;
        clonedCard.classList.remove('dragging');
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
        const removeBtn = document.createElement('button');
        removeBtn.className = 'btn ghost';
        removeBtn.innerHTML = '‚ùå –£–±—Ä–∞—Ç—å';
        removeBtn.style.fontSize = '12px';
        removeBtn.style.padding = '4px 8px';
        removeBtn.addEventListener('click', () => {
          clonedCard.remove();
          this.updateTeamStatus();
        });
        
        clonedCard.appendChild(removeBtn);
        
        // –û—á–∏—â–∞–µ–º drop zone
        dropZone.innerHTML = '';
        dropZone.appendChild(clonedCard);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
        this.updateTeamStatus();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
        const positionTitle = dropZone.closest('.position-slot').querySelector('.position-title').textContent;
        this.showToast(`–ö–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: ${positionTitle}`, 'success');
      } else {
        this.showToast('–≠—Ç–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å —É–∂–µ –∑–∞–Ω—è—Ç–∞!', 'error');
      }
    }
  }
  
  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–º–∞–Ω–¥—ã
  updateTeamStatus() {
    const dropZones = document.querySelectorAll('.candidate-drop-zone');
    let filledPositions = 0;
    
    dropZones.forEach(zone => {
      if (zone.querySelector('.candidate-card')) {
        zone.closest('.position-slot').classList.add('filled');
        filledPositions++;
      } else {
        zone.closest('.position-slot').classList.remove('filled');
      }
    });
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
    const completeTeamBtn = document.getElementById('completeTeam');
    if (completeTeamBtn) {
      completeTeamBtn.disabled = filledPositions < 4;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    this.businessStats.teamSize = filledPositions;
    this.updateBusinessStats();
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  showIntroModal() {
    const introModal = document.getElementById('introModal');
    if (introModal) {
      introModal.classList.add('show');
    }
  }
  
  // –°–∫—Ä—ã—Ç—å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  hideIntroModal() {
    const introModal = document.getElementById('introModal');
    if (introModal) {
      introModal.classList.remove('show');
    }
  }
  
  // –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥
  goBack() {
    if (window.history.length > 1) {
      window.history.back();
    } else {
      window.location.href = '../quests.html';
    }
  }
  
  // –ü–æ–∫–∞–∑–∞—Ç—å toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
  showToast(message, type = 'info') {
    const toast = document.getElementById('toast');
    if (!toast) return;
    
    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    toast.innerHTML = '';
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    let icon = '‚ÑπÔ∏è';
    if (type === 'success') icon = '‚úÖ';
    if (type === 'error') icon = '‚ùå';
    if (type === 'warning') icon = '‚ö†Ô∏è';
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    toast.innerHTML = `${icon} ${message}`;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    toast.className = `toast ${type}`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
    toast.classList.add('show');
    
    // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
      toast.classList.remove('show');
    }, 3000);
  }
  
  // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–≤–µ—Å—Ç–∞
  getQuestProgress() {
    return {
      currentStage: this.currentStage,
      selectedNiche: this.selectedNiche,
      teamMembers: this.teamMembers,
      businessStats: this.businessStats,
      isCompleted: this.currentStage === 4
    };
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä UI –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
let businessUI = null;

document.addEventListener('DOMContentLoaded', function() {
  businessUI = new BusinessQuestUI();
});

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.BusinessQuestUI = BusinessQuestUI;
window.businessUI = businessUI;

console.log('Business Quest UI system loaded successfully!');
