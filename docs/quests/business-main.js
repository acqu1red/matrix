/* ===== BUSINESS QUEST MAIN - OPTIMIZED FOR MINIAPPS ===== */

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let businessEngine = null;
let businessUI = null;
let currentStage = 1;
let selectedNiche = null;
let teamMembers = {};
let businessStats = {
  revenue: 0,
  growth: 0,
  teamSize: 0,
  reputation: 0
};

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å—Ç–æ–≤ –∫–∞–Ω–∞–ª–∞ (–∑–∞–≥–ª—É—à–∫–∞)
const CHANNEL_POSTS = [
  {
    id: 1,
    title: '5 —Å–µ–∫—Ä–µ—Ç–æ–≤ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—è',
    excerpt: '–£–∑–Ω–∞–π—Ç–µ, –∫–∞–∫ –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∏–±—ã–ª—å–Ω—ã–π –±–∏–∑–Ω–µ—Å —Å –Ω—É–ª—è –∏ —Å—Ç–∞—Ç—å –ª–∏–¥–µ—Ä–æ–º –≤ —Å–≤–æ–µ–π –Ω–∏—à–µ...',
    date: '2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥',
    views: '1.2K',
    likes: '89'
  },
  {
    id: 2,
    title: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ 2024',
    excerpt: '–ê–Ω–∞–ª–∏–∑ –ª—É—á—à–∏—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≥–æ–¥–∞ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–≤...',
    date: '5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥',
    views: '856',
    likes: '67'
  },
  {
    id: 3,
    title: '–ö–∞–∫ —Å–æ–±—Ä–∞—Ç—å —Å–∏–ª—å–Ω—É—é –∫–æ–º–∞–Ω–¥—É',
    excerpt: '–ü–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞–π–º—É –ª—É—á—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏—é —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã...',
    date: '1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥',
    views: '2.1K',
    likes: '156'
  },
  {
    id: 4,
    title: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥ –≤ —Ü–∏—Ñ—Ä–æ–≤—É—é —ç–ø–æ—Ö—É',
    excerpt: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –±–∏–∑–Ω–µ—Å–∞ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö...',
    date: '2 –¥–Ω—è –Ω–∞–∑–∞–¥',
    views: '1.8K',
    likes: '134'
  }
];

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–≤–µ—Å—Ç–∞ "–¢–≤–æ–π –ø–µ—Ä–≤—ã–π –±–∏–∑–Ω–µ—Å"...');
  
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
    initializeQuest();
    
    console.log('‚úÖ –ë–∏–∑–Ω–µ—Å-–∫–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–≤–µ—Å—Ç–∞:', error);
    showErrorMessage('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–≤–µ—Å—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
  }
});

// –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–≤–µ—Å—Ç–∞
function initializeQuest() {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º UI —ç–ª–µ–º–µ–Ω—Ç—ã
  initializeUI();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º drag & drop
  initializeDragAndDrop();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  initializeEventHandlers();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–µ–Ω—Ç—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  initializeActivityFeed();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  showIntroModal();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI —ç–ª–µ–º–µ–Ω—Ç–æ–≤
function initializeUI() {
  // –ö–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å –∫–≤–µ—Å—Ç"
  const startQuestBtn = document.getElementById('startQuest');
  if (startQuestBtn) {
    startQuestBtn.addEventListener('click', startQuest);
  }
  
  // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
  const backBtn = document.getElementById('btnBack');
  if (backBtn) {
    backBtn.addEventListener('click', goBack);
  }
  
  // –ö–Ω–æ–ø–∫–∏ —ç—Ç–∞–ø–æ–≤
  const selectNicheBtn = document.getElementById('selectNiche');
  if (selectNicheBtn) {
    selectNicheBtn.addEventListener('click', confirmNicheSelection);
  }
  
  const completeTeamBtn = document.getElementById('completeTeam');
  if (completeTeamBtn) {
    completeTeamBtn.addEventListener('click', completeTeamSelection);
  }
  
  const nextQuarterBtn = document.getElementById('nextQuarter');
  if (nextQuarterBtn) {
    nextQuarterBtn.addEventListener('click', nextQuarter);
  }
  
  const finishQuestBtn = document.getElementById('finishQuest');
  if (finishQuestBtn) {
    finishQuestBtn.addEventListener('click', finishQuest);
  }
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∏—à
  initializeNicheCards();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  initializeCandidates();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ—à–µ–Ω–∏—è
  initializeDecisions();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
  initializeTools();
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  initializeAchievements();
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –Ω–∏—à
function initializeNicheCards() {
  const nicheCards = document.querySelectorAll('.niche-card');
  
  nicheCards.forEach(card => {
    card.addEventListener('click', function() {
      // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –∫–∞—Ä—Ç–æ—á–µ–∫
      nicheCards.forEach(c => c.classList.remove('selected'));
      
      // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É
      this.classList.add('selected');
      
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –Ω–∏—à—É
      selectedNiche = this.dataset.niche;
      
      // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –≤—ã–±–æ—Ä–∞
      const selectBtn = document.getElementById('selectNiche');
      if (selectBtn) {
        selectBtn.disabled = false;
        selectBtn.classList.add('success-animation');
        setTimeout(() => selectBtn.classList.remove('success-animation'), 600);
      }
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
      showToast(`–í—ã–±—Ä–∞–Ω–∞ –Ω–∏—à–∞: ${this.querySelector('h3').textContent}`, 'success');
    });
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
function initializeCandidates() {
  const candidatesGrid = document.querySelector('.candidates-grid');
  if (!candidatesGrid) return;
  
  // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É
  candidatesGrid.innerHTML = '';
  
  // –°–æ–∑–¥–∞–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
  const candidates = [
    { id: 'candidate1', name: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤', skills: '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ, –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è', avatar: 'üë®‚Äçüíº' },
    { id: 'candidate2', name: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', skills: '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, –ê–Ω–∞–ª–∏—Ç–∏–∫–∞', avatar: 'üë©‚Äçüé®' },
    { id: 'candidate3', name: '–î–º–∏—Ç—Ä–∏–π –ö–æ–∑–ª–æ–≤', skills: '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞, –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', avatar: 'üë®‚Äçüíª' },
    { id: 'candidate4', name: '–ê–Ω–Ω–∞ –í–æ–ª–∫–æ–≤–∞', skills: '–≠–∫—Å–ø–µ—Ä—Ç–∏–∑–∞, –û–ø—ã—Ç', avatar: 'üë©‚Äçüî¨' }
  ];
  
  candidates.forEach(candidate => {
    const candidateCard = document.createElement('div');
    candidateCard.className = 'candidate-card';
    candidateCard.dataset.candidateId = candidate.id;
    candidateCard.draggable = true;
    
    candidateCard.innerHTML = `
      <div class="candidate-avatar">${candidate.avatar}</div>
      <div class="candidate-name">${candidate.name}</div>
      <div class="candidate-skills">${candidate.skills}</div>
    `;
    
    candidatesGrid.appendChild(candidateCard);
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ—à–µ–Ω–∏–π
function initializeDecisions() {
  const decisionsGrid = document.querySelector('.decisions-grid');
  if (!decisionsGrid) return;
  
  // –û—á–∏—â–∞–µ–º —Å–µ—Ç–∫—É
  decisionsGrid.innerHTML = '';
  
  // –°–æ–∑–¥–∞–µ–º —Ä–µ—à–µ–Ω–∏—è
  const decisions = [
    {
      id: 'decision1',
      title: '–ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥',
      description: '–£–≤–µ–ª–∏—á–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π –±—é–¥–∂–µ—Ç –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤',
      impact: { revenue: '+15%', risk: '–°—Ä–µ–¥–Ω–∏–π' }
    },
    {
      id: 'decision2',
      title: '–†–∞—Å—à–∏—Ä–∏—Ç—å –∫–æ–º–∞–Ω–¥—É',
      description: '–ù–∞–Ω—è—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –¥–ª—è —Ä–æ—Å—Ç–∞',
      impact: { revenue: '+25%', risk: '–í—ã—Å–æ–∫–∏–π' }
    },
    {
      id: 'decision3',
      title: '–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã',
      description: '–£–ª—É—á—à–∏—Ç—å –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ—Ü–µ—Å—Å—ã',
      impact: { revenue: '+10%', risk: '–ù–∏–∑–∫–∏–π' }
    },
    {
      id: 'decision4',
      title: '–†–∞–∑–≤–∏–≤–∞—Ç—å –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–∞',
      description: '–ù–∞–π—Ç–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤',
      impact: { revenue: '+20%', risk: '–°—Ä–µ–¥–Ω–∏–π' }
    }
  ];
  
  decisions.forEach(decision => {
    const decisionCard = document.createElement('div');
    decisionCard.className = 'decision-card';
    decisionCard.dataset.decisionId = decision.id;
    
    decisionCard.innerHTML = `
      <div class="decision-title">${decision.title}</div>
      <div class="decision-description">${decision.description}</div>
      <div class="decision-impact">
        <span>–î–æ—Ö–æ–¥: ${decision.impact.revenue}</span>
        <span>–†–∏—Å–∫: ${decision.impact.risk}</span>
      </div>
    `;
    
    decisionCard.addEventListener('click', function() {
      // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–µ—à–µ–Ω–∏–µ
      applyDecision(decision);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
      this.classList.add('success-animation');
      setTimeout(() => this.classList.remove('success-animation'), 600);
    });
    
    decisionsGrid.appendChild(decisionCard);
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
function initializeTools() {
  const toolCards = document.querySelectorAll('.tool-card .btn');
  
  toolCards.forEach(btn => {
    btn.addEventListener('click', function() {
      const toolName = this.closest('.tool-card').querySelector('h3').textContent;
      showToast(`–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç "${toolName}" –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏!`, 'info');
    });
  });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
function initializeAchievements() {
  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  updateAchievementsProgress();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
function updateAchievementsProgress() {
  // –ü–µ—Ä–≤—ã–π —à–∞–≥ - –≤—Å–µ–≥–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω
  const firstStepProgress = document.querySelector('.achievement-card:nth-child(1) .progress-fill');
  if (firstStepProgress) {
    firstStepProgress.style.width = '100%';
  }
  
  // –ö–æ–º–∞–Ω–¥–æ—Å—Ç—Ä–æ–∏—Ç–µ–ª—å
  const teamBuilderProgress = document.querySelector('.achievement-card:nth-child(2) .progress-fill');
  const teamBuilderText = document.querySelector('.achievement-card:nth-child(2) .progress-text');
  if (teamBuilderProgress && teamBuilderText) {
    const progress = (businessStats.teamSize / 4) * 100;
    teamBuilderProgress.style.width = `${progress}%`;
    teamBuilderText.textContent = `${businessStats.teamSize}/4`;
  }
  
  // –ú–∏–ª–ª–∏–æ–Ω–µ—Ä
  const millionaireProgress = document.querySelector('.achievement-card:nth-child(3) .progress-fill');
  const millionaireText = document.querySelector('.achievement-card:nth-child(3) .progress-text');
  if (millionaireProgress && millionaireText) {
    const progress = Math.min((businessStats.revenue / 100000) * 100, 100);
    millionaireProgress.style.width = `${progress}%`;
    millionaireText.textContent = `${businessStats.revenue.toLocaleString()}/100,000`;
  }
  
  // –ü—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å
  const entrepreneurProgress = document.querySelector('.achievement-card:nth-child(4) .progress-fill');
  const entrepreneurText = document.querySelector('.achievement-card:nth-child(4) .progress-text');
  if (entrepreneurProgress && entrepreneurText) {
    const progress = (currentStage / 4) * 100;
    entrepreneurProgress.style.width = `${progress}%`;
    entrepreneurText.textContent = `${currentStage}/4 —ç—Ç–∞–ø–∞`;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–µ–Ω—Ç—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
function initializeActivityFeed() {
  const joinChannelBtn = document.getElementById('joinChannel');
  
  if (joinChannelBtn) {
    joinChannelBtn.addEventListener('click', joinChannel);
  }
  
  // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—Å—Ç—ã
  loadChannelPosts();
}

// –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∫ –∫–∞–Ω–∞–ª—É
function joinChannel() {
  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª –≤ Telegram
  if (window.Telegram && window.Telegram.WebApp) {
    window.Telegram.WebApp.openTelegramLink('https://t.me/+1001928787715');
  } else {
    // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
    window.open('https://t.me/+1001928787715', '_blank');
  }
  
  showToast('–ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–∞–Ω–∞–ª "–ë–∏–∑–Ω–µ—Å & –£—Å–ø–µ—Ö"!', 'success');
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ—Å—Ç–æ–≤ –∫–∞–Ω–∞–ª–∞
function loadChannelPosts() {
  const postsContainer = document.getElementById('postsContainer');
  if (!postsContainer) return;
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  setTimeout(() => {
    postsContainer.innerHTML = '';
    
    CHANNEL_POSTS.forEach(post => {
      const postCard = createPostCard(post);
      postsContainer.appendChild(postCard);
    });
  }, 1500);
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –ø–æ—Å—Ç–∞
function createPostCard(post) {
  const postCard = document.createElement('div');
  postCard.className = 'post-card glass';
  
  postCard.innerHTML = `
    <div class="post-header">
      <h4>${post.title}</h4>
      <span class="post-date">${post.date}</span>
    </div>
    <p class="post-excerpt">${post.excerpt}</p>
    <div class="post-stats">
      <span class="post-views">üëÅÔ∏è ${post.views}</span>
      <span class="post-likes">‚ù§Ô∏è ${post.likes}</span>
    </div>
  `;
  
  postCard.addEventListener('click', () => {
    // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ
    joinChannel();
  });
  
  return postCard;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è drag & drop
function initializeDragAndDrop() {
  const candidateCards = document.querySelectorAll('.candidate-card');
  const dropZones = document.querySelectorAll('.candidate-drop-zone');
  
  candidateCards.forEach(card => {
    card.addEventListener('dragstart', handleDragStart);
    card.addEventListener('dragend', handleDragEnd);
  });
  
  dropZones.forEach(zone => {
    zone.addEventListener('dragover', handleDragOver);
    zone.addEventListener('drop', handleDrop);
    zone.addEventListener('dragenter', handleDragEnter);
    zone.addEventListener('dragleave', handleDragLeave);
  });
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ drag & drop
function handleDragStart(e) {
  e.target.classList.add('dragging');
  e.dataTransfer.setData('text/plain', e.target.dataset.candidateId);
  e.dataTransfer.effectAllowed = 'move';
}

function handleDragEnd(e) {
  e.target.classList.remove('dragging');
}

function handleDragOver(e) {
  e.preventDefault();
  e.dataTransfer.dropEffect = 'move';
}

function handleDragEnter(e) {
  e.preventDefault();
  const dropZone = e.target.closest('.candidate-drop-zone');
  if (dropZone) {
    dropZone.classList.add('drag-over');
  }
}

function handleDragLeave(e) {
  const dropZone = e.target.closest('.candidate-drop-zone');
  if (dropZone) {
    dropZone.classList.remove('drag-over');
  }
}

function handleDrop(e) {
  e.preventDefault();
  const dropZone = e.target.closest('.candidate-drop-zone');
  const candidateId = e.dataTransfer.getData('text/plain');
  const candidateCard = document.querySelector(`[data-candidate-id="${candidateId}"]`);
  
  if (dropZone && candidateCard) {
    // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã drag-over
    dropZone.classList.remove('drag-over');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–∑–∏—Ü–∏—è —Å–≤–æ–±–æ–¥–Ω–∞
    if (!dropZone.querySelector('.candidate-card')) {
      // –ö–ª–æ–Ω–∏—Ä—É–µ–º –∫–∞—Ä—Ç–æ—á–∫—É –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
      const clonedCard = candidateCard.cloneNode(true);
      clonedCard.draggable = false;
      clonedCard.classList.remove('dragging');
      clonedCard.classList.add('assigned-candidate');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —É–¥–∞–ª–µ–Ω–∏—è
      const removeBtn = document.createElement('button');
      removeBtn.className = 'btn ghost remove-candidate-btn';
      removeBtn.innerHTML = '‚ùå –£–±—Ä–∞—Ç—å';
      removeBtn.style.fontSize = '12px';
      removeBtn.style.padding = '4px 8px';
      removeBtn.style.marginTop = '10px';
      removeBtn.addEventListener('click', function() {
        clonedCard.remove();
        updateTeamStatus();
      });
      
      // –û—á–∏—â–∞–µ–º drop zone –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
      dropZone.innerHTML = '';
      dropZone.appendChild(clonedCard);
      dropZone.appendChild(removeBtn);
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
      dropZone.classList.add('has-candidate');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã
      updateTeamStatus();
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
      const positionTitle = dropZone.closest('.position-slot').querySelector('.position-title').textContent;
      showToast(`–ö–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω –Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å: ${positionTitle}`, 'success');
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —É—Å–ø–µ—Ö–∞
      dropZone.style.animation = 'successDrop 0.6s ease-in-out';
      setTimeout(() => {
        dropZone.style.animation = '';
      }, 600);
    } else {
      showToast('–≠—Ç–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å —É–∂–µ –∑–∞–Ω—è—Ç–∞!', 'error');
    }
  }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–º–∞–Ω–¥—ã
function updateTeamStatus() {
  const dropZones = document.querySelectorAll('.candidate-drop-zone');
  let filledPositions = 0;
  
  dropZones.forEach(zone => {
    if (zone.querySelector('.candidate-card')) {
      zone.closest('.position-slot').classList.add('filled');
      zone.classList.add('has-candidate');
      filledPositions++;
    } else {
      zone.closest('.position-slot').classList.remove('filled');
      zone.classList.remove('has-candidate');
    }
  });
  
  // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
  const completeTeamBtn = document.getElementById('completeTeam');
  if (completeTeamBtn) {
    completeTeamBtn.disabled = filledPositions < 4;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
    if (filledPositions === 4) {
      completeTeamBtn.classList.add('ready-animation');
      setTimeout(() => completeTeamBtn.classList.remove('ready-animation'), 1000);
    }
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  businessStats.teamSize = filledPositions;
  updateBusinessStats();
  updateAchievementsProgress();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateBusinessStats() {
  const revenueEl = document.getElementById('revenue');
  const growthEl = document.getElementById('growth');
  const teamSizeEl = document.getElementById('teamSize');
  const reputationEl = document.getElementById('reputation');
  
  if (revenueEl) revenueEl.textContent = `${businessStats.revenue.toLocaleString()} ‚ÇΩ`;
  if (growthEl) growthEl.textContent = `${businessStats.growth}%`;
  if (teamSizeEl) teamSizeEl.textContent = businessStats.teamSize;
  if (reputationEl) reputationEl.textContent = businessStats.reputation;
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è
function applyDecision(decision) {
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ—à–µ–Ω–∏—è
  if (decision.impact.revenue.includes('+')) {
    const increase = parseInt(decision.impact.revenue);
    businessStats.revenue += businessStats.revenue * (increase / 100);
    businessStats.growth += increase;
  }
  
  if (decision.impact.risk === '–ù–∏–∑–∫–∏–π') {
    businessStats.reputation += 5;
  } else if (decision.impact.risk === '–°—Ä–µ–¥–Ω–∏–π') {
    businessStats.reputation += 3;
  } else {
    businessStats.reputation += 1;
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  updateBusinessStats();
  updateAchievementsProgress();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
  showToast(`–†–µ—à–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ: ${decision.title}`, 'success');
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
function initializeEventHandlers() {
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
  window.addEventListener('error', function(event) {
    console.error('–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', event.error);
    showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ—Ç–∞–ª–µ–π.', 'error');
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø—Ä–æ–º–∏—Å–æ–≤
  window.addEventListener('unhandledrejection', function(event) {
    console.error('–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Ä–æ–º–∏—Å:', event.reason);
    showToast('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞.', 'error');
  });
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
  const closePrizesModal = document.getElementById('closePrizesModal');
  
  if (closePrizesModal) {
    closePrizesModal.addEventListener('click', () => {
      document.getElementById('prizesModal').classList.remove('show');
    });
  }
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–æ–≤ –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏—Ö
  window.addEventListener('click', function(event) {
    const modals = document.querySelectorAll('.modal');
    modals.forEach(modal => {
      if (event.target === modal) {
        modal.classList.remove('show');
      }
    });
  });
}

// –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–≤–µ—Å—Ç–∞
function startQuest() {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  const introModal = document.getElementById('introModal');
  if (introModal) {
    introModal.classList.remove('show');
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç
  const questContent = document.querySelector('.quest-content');
  if (questContent) {
    questContent.style.display = 'block';
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
  const questProgress = document.querySelector('.quest-progress');
  if (questProgress) {
    questProgress.style.display = 'block';
  }
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —ç—Ç–∞–ø
  showStage(1);
  
  showToast('üöÄ –ö–≤–µ—Å—Ç –Ω–∞—á–∞–ª—Å—è! –í—ã–±–µ—Ä–∏—Ç–µ –Ω–∏—à—É –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞.', 'success');
}

function confirmNicheSelection() {
  if (!selectedNiche) {
    showToast('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∏—à—É!', 'error');
    return;
  }
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫–æ –≤—Ç–æ—Ä–æ–º—É —ç—Ç–∞–ø—É
  showStage(2);
  
  showToast('‚úÖ –ù–∏—à–∞ –≤—ã–±—Ä–∞–Ω–∞! –¢–µ–ø–µ—Ä—å —Å–æ–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É.', 'success');
}

function completeTeamSelection() {
  const dropZones = document.querySelectorAll('.candidate-drop-zone');
  let filledPositions = 0;
  
  dropZones.forEach(zone => {
    if (zone.querySelector('.candidate-card')) {
      filledPositions++;
    }
  });
  
  if (filledPositions < 4) {
    showToast('–ù—É–∂–Ω–æ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏!', 'error');
    return;
  }
  
  // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ç—Ä–µ—Ç—å–µ–º—É —ç—Ç–∞–ø—É
  showStage(3);
  
  showToast('üë• –ö–æ–º–∞–Ω–¥–∞ —Å–æ–±—Ä–∞–Ω–∞! –¢–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–π—Ç–µ –±–∏–∑–Ω–µ—Å–æ–º.', 'success');
}

function nextQuarter() {
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  businessStats.revenue += businessStats.revenue * 0.1; // +10% –∫ –¥–æ—Ö–æ–¥—É
  businessStats.growth += 5; // +5% –∫ —Ä–æ—Å—Ç—É
  businessStats.reputation += 2; // +2 –∫ —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  updateBusinessStats();
  updateAchievementsProgress();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
  showToast('üìà –ö–≤–∞—Ä—Ç–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω! –ë–∏–∑–Ω–µ—Å —Ä–∞—Å—Ç–µ—Ç.', 'success');
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º
  if (businessStats.revenue >= 100000) {
    setTimeout(() => {
      showStage(4);
      showToast('üèÜ –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞! –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º.', 'success');
    }, 1000);
  }
}

function finishQuest() {
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  updateFinalStats();
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
  showToast('üéâ –ö–≤–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å —É—Å–ø–µ—à–Ω—ã–º –±–∏–∑–Ω–µ—Å–æ–º!', 'success');
  
  // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–≤–µ—Å—Ç–∞–º
  setTimeout(() => {
    goBack();
  }, 2000);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–∞–ø
function showStage(stageNumber) {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç—Ç–∞–ø—ã
  const stages = document.querySelectorAll('.quest-stage');
  stages.forEach(stage => stage.classList.remove('active'));
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç—Ç–∞–ø
  const targetStage = document.getElementById(getStageId(stageNumber));
  if (targetStage) {
    targetStage.classList.add('active');
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
  updateProgress(stageNumber);
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç—Ç–∞–ø
  currentStage = stageNumber;
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
  updateAchievementsProgress();
}

// –ü–æ–ª—É—á–∏—Ç—å ID —ç—Ç–∞–ø–∞
function getStageId(stageNumber) {
  const stageIds = {
    1: 'nicheSelection',
    2: 'teamSelection',
    3: 'businessManagement',
    4: 'results'
  };
  return stageIds[stageNumber] || 'nicheSelection';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
function updateProgress(stageNumber) {
  const progressFill = document.getElementById('progressFill');
  const steps = document.querySelectorAll('.step');
  
  if (progressFill) {
    progressFill.style.width = `${stageNumber * 25}%`;
  }
  
  steps.forEach((step, index) => {
    const stepNumber = index + 1;
    
    if (stepNumber < stageNumber) {
      step.classList.add('completed');
      step.classList.remove('active');
    } else if (stepNumber === stageNumber) {
      step.classList.add('active');
      step.classList.remove('completed');
    } else {
      step.classList.remove('active', 'completed');
    }
  });
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
function updateFinalStats() {
  const finalRevenue = document.getElementById('finalRevenue');
  const finalTeamSize = document.getElementById('finalTeamSize');
  const finalReputation = document.getElementById('finalReputation');
  const finalGrowth = document.getElementById('finalGrowth');
  
  if (finalRevenue) finalRevenue.textContent = `${businessStats.revenue.toLocaleString()} ‚ÇΩ`;
  if (finalTeamSize) finalTeamSize.textContent = businessStats.teamSize;
  if (finalReputation) finalReputation.textContent = businessStats.reputation;
  if (finalGrowth) finalGrowth.textContent = `${businessStats.growth}%`;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function showIntroModal() {
  const introModal = document.getElementById('introModal');
  if (introModal) {
    introModal.classList.add('show');
  }
}

// –í–æ–∑–≤—Ä–∞—Ç –Ω–∞–∑–∞–¥
function goBack() {
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –∫–≤–µ—Å—Ç–∞–º
  if (window.history.length > 1) {
    window.history.back();
  } else {
    // –ï—Å–ª–∏ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–≤–µ—Å—Ç–æ–≤
    window.location.href = '../quests.html';
  }
}

// –ü–æ–∫–∞–∑–∞—Ç—å toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
function showToast(message, type = 'info') {
  const toast = document.getElementById('toast');
  if (!toast) return;
  
  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  toast.innerHTML = '';
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
  let icon = '‚ÑπÔ∏è';
  if (type === 'success') icon = '‚úÖ';
  if (type === 'error') icon = '‚ùå';
  if (type === 'warning') icon = '‚ö†Ô∏è';
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
  toast.innerHTML = `${icon} ${message}`;
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å—ã –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
  toast.className = `toast ${type}`;
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º toast
  toast.classList.add('show');
  
  // –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    toast.classList.remove('show');
  }, 3000);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
function showErrorMessage(message) {
  const errorDiv = document.createElement('div');
  errorDiv.style.cssText = `
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(255, 68, 68, 0.9);
    color: white;
    padding: 20px;
    border-radius: 12px;
    font-size: 16px;
    font-weight: 600;
    z-index: 10000;
    max-width: 400px;
    text-align: center;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.5);
  `;
  
  errorDiv.innerHTML = `
    <div style="margin-bottom: 16px;">‚ö†Ô∏è –û—à–∏–±–∫–∞</div>
    <div style="margin-bottom: 20px; font-weight: 400;">${message}</div>
    <button onclick="location.reload()" style="
      background: white;
      color: #ff4444;
      border: none;
      padding: 8px 16px;
      border-radius: 6px;
      font-weight: 600;
      cursor: pointer;
    ">–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å</button>
  `;
  
  document.body.appendChild(errorDiv);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π –∫–≤–µ—Å—Ç–æ–≤
function getQuestProgress() {
  return {
    currentStage: currentStage,
    selectedNiche: selectedNiche,
    teamMembers: teamMembers,
    businessStats: businessStats,
    isCompleted: currentStage === 4
  };
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.businessQuest = {
  getQuestProgress,
  showToast,
  goBack
};

console.log('Business Quest system initialized successfully!');
