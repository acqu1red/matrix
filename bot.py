from telegram import Update, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, CallbackQueryHandler
from telegram.ext import ApplicationBuilder
import asyncio
import logging
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BOT_TOKEN = "8435828779:AAFo5UccSatCkqmblr6AW6YrrJli89j6GyQ"
MINIAPP_URL = "https://acqu1red.github.io/matrix"
HELP_URL = "https://acqu1red.github.io/matrix/supports.html"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –∏ —Ç–µ–∫—Å—Ç —Å –∫–Ω–æ–ø–∫–∞–º–∏"""
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
    await setup_menu_button(context.application)
    
    if update.message:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ
        video_path = "start.MP4"
        if os.path.exists(video_path):
            with open(video_path, 'rb') as video_file:
                await update.message.reply_video(
                    video=video_file,
                    caption="üëÜ –ë—ã—Å—Ç—Ä—ã–π –æ–±–∑–æ—Ä –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∏–º—É–ª—è—Ü–∏–π –∏ –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≤–Ω—É—Ç—Ä–∏ –ú–∞—Ç—Ä–∏—Ü—ã –°–∏–º—É–ª—è—Ü–∏–π.\n\n"
                            "<b>–ú–ê–¢–†–ò–¶–ê –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –±–æ–ª–µ–µ —á–µ–º 7 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏–Ω–≥-—Å–∏–º—É–ª—è—Ü–∏–π.</b>\n\n"
                            "üëá –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ –ú–∞—Ç—Ä–∏—Ü—ã –°–∏–º—É–ª—è—Ü–∏–π.\n\n",
                    parse_mode='HTML',
                    reply_markup=create_start_keyboard()
                )
        else:
            # –ï—Å–ª–∏ –≤–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
            await update.message.reply_text(
                "üëÜ –ë—ã—Å—Ç—Ä—ã–π –æ–±–∑–æ—Ä –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å–∏–º—É–ª—è—Ü–∏–π –∏ –¥—Ä—É–≥–∏—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –≤–Ω—É—Ç—Ä–∏ –ú–∞—Ç—Ä–∏—Ü—ã –°–∏–º—É–ª—è—Ü–∏–π.\n\n"
                "<b>–ú–ê–¢–†–ò–¶–ê –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –±–æ–ª–µ–µ —á–µ–º 7 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–∏–Ω–≥-—Å–∏–º—É–ª—è—Ü–∏–π.</b>\n\n"
                "üëá –í—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ —Å–∏—Å—Ç–µ–º–µ –ú–∞—Ç—Ä–∏—Ü—ã –°–∏–º—É–ª—è—Ü–∏–π.\n\n",
                parse_mode='HTML',
                reply_markup=create_start_keyboard()
            )

def create_start_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start"""
    keyboard = [
        [
            InlineKeyboardButton("üíÄ –°–∏–º—É–ª—è—Ü–∏–∏", web_app=WebAppInfo(url=MINIAPP_URL))
        ],
        [
            InlineKeyboardButton("üÜò –°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏", web_app=WebAppInfo(url=HELP_URL))
        ],
        [
            InlineKeyboardButton("üß† –õ–∏—á–Ω—ã–π –±–ª–æ–≥ –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏", url="https://t.me/+RbRPxCFEOe00ZThi")
        ],
        [
            InlineKeyboardButton("üéØ –£–ù–ò–ö–ê–õ–¨–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï", callback_data="unique_offer")
        ],
        [
            InlineKeyboardButton("üé≠ –°–ö–ò–î–ö–ê 90%: –ü–°–ò–•–û–õ–û–ì–ò–Ø –õ–ñ–ò", callback_data="psychology_lie")
        ],
        [
            InlineKeyboardButton("üîç –ü–†–û–§–ê–ô–õ–ò–ù–ì: –ü–û–õ–ù–´–ô –ì–ê–ô–î", callback_data="profiling_guide")
        ],
        [
            InlineKeyboardButton("üë©‚Äçüíº –†–ê–ó–ë–û–† 100 –ñ–ï–ù–°–ö–ò–• –ú–ê–ù–ò–ü–£–õ–Ø–¶–ò–ô", callback_data="female_manipulations")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

async def button_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "unique_offer":
        await query.edit_message_text("üéØ –£–ù–ò–ö–ê–õ–¨–ù–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï\n\n–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!")
    elif query.data == "psychology_lie":
        await query.edit_message_text("üé≠ –°–ö–ò–î–ö–ê 90%: –ü–°–ò–•–û–õ–û–ì–ò–Ø –õ–ñ–ò\n\n–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –∫—É—Ä—Å –ø–æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏ –ª–∂–∏!")
    elif query.data == "profiling_guide":
        await query.edit_message_text("üîç –ü–†–û–§–ê–ô–õ–ò–ù–ì: –ü–û–õ–ù–´–ô –ì–ê–ô–î\n\n–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ–ª–Ω—ã–π –≥–∞–π–¥ –ø–æ –ø—Ä–æ—Ñ–∞–π–ª–∏–Ω–≥—É!")
    elif query.data == "female_manipulations":
        await query.edit_message_text("üë©‚Äçüíº –†–ê–ó–ë–û–† 100 –ñ–ï–ù–°–ö–ò–• –ú–ê–ù–ò–ü–£–õ–Ø–¶–ò–ô\n\n–°–∫–æ—Ä–æ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–∞–∑–±–æ—Ä –∂–µ–Ω—Å–∫–∏—Ö –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π!")

async def setup_menu_button(application: Application) -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App"""
    try:
        await application.bot.set_chat_menu_button(
            menu_button={
                "type": "web_app",
                "text": "üíÄ –°–∏–º—É–ª—è—Ü–∏–∏",
                "web_app": {"url": MINIAPP_URL}
            }
        )
        logger.info("‚úÖ –ö–Ω–æ–ø–∫–∞ –º–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é: {e}")

def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Matrix –±–æ—Ç–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = ApplicationBuilder().token(BOT_TOKEN).build()
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_callback))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –º–µ–Ω—é –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    # setup_menu_button –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ polling
    
    logger.info("üìù –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    logger.info("üîÑ –ó–∞–ø—É—Å–∫ polling...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()
